{"category": "Performance", "sql_query": "SELECT dbo.Vw_EmployeeView.EmployeeCode, dbo.Vw_EmployeeView.FullName, dbo.vw_eprf_EmpOrgLevels.[Group] AS Level1, dbo.vw_eprf_EmpOrgLevels.Company AS Level2,dbo.vw_eprf_EmpOrgLevels.Department AS Level3, dbo.vw_eprf_EmpOrgLevels.Unit AS Level4, dbo.MI_EPRF_EmpAccomplishment.AwardName, dbo.MI_EPRF_EmpAccomplishment.Year,dbo.MI_EPRF_EmpAccomplishment.Comments, dbo.MI_EPRF_EmpAccomplishment.AccomplishmentCode, dbo.Vw_EmployeeView.Number FROM dbo.MI_EPRF_EmpAccomplishment LEFT OUTER JOIN dbo.Vw_EmployeeView ON dbo.MI_EPRF_EmpAccomplishment.EmployeeCode = dbo.Vw_EmployeeView.EmployeeCode INNER JOIN dbo.vw_eprf_EmpOrgLevels ON dbo.MI_EPRF_EmpAccomplishment.EmployeeCode = dbo.vw_eprf_EmpOrgLevels.EmployeeCode WHERE        (dbo.MI_EPRF_EmpAccomplishment.Deleted = 0)", "table_requirement": "Award and Accomplishment Report"}
{"category": "Performance", "sql_query": "select EAPR.Number as AprNumber, EAPR.FullName as AprName, EAPP.Number as AppNumber, EAPP.FullName as AppName, APR.TemplateCode , T.TemplateName from MI_PMS_Appraiser APR left outer join MI_PMS_Appraisee APP on APR.AppraiserId=APP.AppraiserId and APP.Deleted=0 left outer join MI_Employer_Employee EAPP on EAPP.EmployeeCode=APP.AppraiseeEmployeeCode left outer join MI_Employer_Employee EAPR on EAPR.EmployeeCode=APR.AppraiserEmployeeCode Left outer join MI_PMS_Template T ON T.TemplateCode=APR.TemplateCode where APR.Deleted=0 order by EAPR.Number ASC", "table_requirement": "Appraiser Appraisee Report"}
{"category": "Performance", "sql_query": "SELECT dbo.MI_PMS_Template.TemplateName, dbo.MI_PMS_Appraiser.AppraisalGroupName, dbo.MI_PMS_Appraiser.AppraiserEmployeeCode, dbo.MI_PMS_Appraisee.AppraiseeEmployeeCode, dbo.MI_Employer_Employee.Number + ' : ' + dbo.MI_Employer_Employee.FullName AS AppraiserName, MI_Employer_Employee_1.Number + ' : ' + MI_Employer_Employee_1.FullName AS AppraiseeName, dbo.MI_EPRF_Designation.DesignationName, dbo.MI_EPRF_OrgLevel1.Name AS Level1Name, dbo.MI_EPRF_OrgLevel2.Name AS Level2Name, dbo.MI_EPRF_OrgLevel3.Name AS Level3Name, dbo.MI_EPRF_OrgLevel4.Name AS Level4Name ,dbo.MI_PMS_Template.AppraisalStartDate,dbo.MI_PMS_Template.AppraisalEndDate FROM            dbo.MI_PMS_Appraisee INNER JOIN dbo.MI_PMS_Appraiser ON dbo.MI_PMS_Appraisee.AppraiserId = dbo.MI_PMS_Appraiser.AppraiserId INNER JOIN dbo.MI_PMS_Template ON dbo.MI_PMS_Appraisee.TemplateCode = dbo.MI_PMS_Template.TemplateCode INNER JOIN dbo.MI_PMS_Goal ON dbo.MI_PMS_Template.TemplateCode = dbo.MI_PMS_Goal.TemplateCode INNER JOIN dbo.MI_Employer_Employee ON dbo.MI_PMS_Appraiser.AppraiserEmployeeCode = dbo.MI_Employer_Employee.EmployeeCode INNER JOIN dbo.MI_Employer_Employee AS MI_Employer_Employee_1 ON dbo.MI_PMS_Appraisee.AppraiseeEmployeeCode = MI_Employer_Employee_1.EmployeeCode INNER JOIN dbo.MI_EPRF_Designation ON MI_Employer_Employee_1.DesignationCode = dbo.MI_EPRF_Designation.DesignationCode INNER JOIN dbo.MI_EPRF_OrgLevel1 ON MI_Employer_Employee_1.Level1Code = dbo.MI_EPRF_OrgLevel1.Level1Code INNER JOIN dbo.MI_EPRF_OrgLevel2 ON MI_Employer_Employee_1.Level2Code = dbo.MI_EPRF_OrgLevel2.Level2Code INNER JOIN dbo.MI_EPRF_OrgLevel3 ON MI_Employer_Employee_1.Level3Code = dbo.MI_EPRF_OrgLevel3.Level3Code INNER JOIN dbo.MI_EPRF_OrgLevel4 ON MI_Employer_Employee_1.Level4Code = dbo.MI_EPRF_OrgLevel4.Level4Code WHERE        (dbo.MI_PMS_Appraisee.AppraiseeEmployeeCode NOT IN (SELECT        EmployeeCode FROM            dbo.MI_PMS_Goal AS MI_PMS_Goal_1 WHERE        (TemplateCode = dbo.MI_PMS_Appraiser.TemplateCode))) AND (dbo.MI_PMS_Template.Deleted = 0) GROUP BY dbo.MI_PMS_Template.TemplateName, dbo.MI_PMS_Appraiser.AppraisalGroupName, dbo.MI_PMS_Appraiser.AppraiserEmployeeCode, dbo.MI_PMS_Appraisee.AppraiseeEmployeeCode, dbo.MI_Employer_Employee.Number, dbo.MI_Employer_Employee.FullName, MI_Employer_Employee_1.Number, MI_Employer_Employee_1.FullName, dbo.MI_EPRF_Designation.DesignationName, dbo.MI_EPRF_OrgLevel1.Name, dbo.MI_EPRF_OrgLevel2.Name, dbo.MI_EPRF_OrgLevel3.Name, dbo.MI_EPRF_OrgLevel4.Name,dbo.MI_PMS_Template.AppraisalStartDate,dbo.MI_PMS_Template.AppraisalEndDate", "table_requirement": "Appraisal Goals not Assigned for the Period of Date Range"}
{"category": "Performance", "sql_query": "Select CL.CompetencyLibraryName,L1.Name 'Group',isnull(L2.Name,'') 'Company',isnull(L3.Name,'') 'Depratment' ,isnull(L4.Name,'') 'Division',isnull(L5.Name,'') 'Section',A.Name 'Competency Area',G.Name 'Competency Group',C.Name 'Competency', CL.CompetencyBasedOn 'Desig/JobCat',DesignationName 'Designation/Job Category',L.Name 'Expected Level', L.Score 'Expected Score',D.ExpectedWeight 'Expected Weight',D.Finalized from [dbo].[MI_OD_Competency] C inner join [dbo].[MI_OD_CompetencyLibrary] CL ON C.CompetencyLibraryCode=CL.CompetencyLibraryCode inner join [dbo].[MI_OD_CompetencyDesignations] D ON CL.CompetencyLibraryCode=D.CompetencyLibraryCode inner join [dbo].[MI_OD_CompetencyArea] A ON C.CAreaCode=A.CAreaCode inner join [dbo].[MI_OD_CompetencyGroup] G ON C.CGroupCode=G.CGroupCode inner join [dbo].[MI_EPRF_Designation] Desi ON D.DesignationCode=Desi.DesignationCode Left Outer join [dbo].[MI_OD_CompetencyLevel] L ON D.ExpectedLevel=L.CLevelCode Left Outer join MI_EPRF_OrgLevel1 L1 ON CL.Level1Code=L1.Level1Code Left Outer join MI_EPRF_OrgLevel2 L2 ON CL.Level2Code=L2.Level2Code Left Outer join MI_EPRF_OrgLevel3 L3 ON CL.Level3Code=L3.Level3Code Left Outer join MI_EPRF_OrgLevel4 L4 ON CL.Level4Code=L4.Level4Code Left Outer join MI_EPRF_OrgLevel5 L5 ON CL.Level5Code=L5.Level5Code WHERE  CL.CompetencyBasedOn='DESG' AND C.Deleted=0 AND L.Deleted=0  Union Select CL.CompetencyLibraryName,L1.Name 'Group',isnull(L2.Name,'') 'Company',isnull(L3.Name,'') 'Depratment' ,isnull(L4.Name,'') 'Division',isnull(L5.Name,'') 'Section',A.Name 'Competency Area',G.Name 'Competency Group',C.Name 'Competency', CL.CompetencyBasedOn 'Designation/Job category',JobCategoryName 'Designation/Job Category',L.Name 'Expected Level', L.Score 'Expected Score',J.ExpectedWeight 'Expected Weight',J.Finalized from [dbo].[MI_OD_Competency] C inner join [dbo].[MI_OD_CompetencyLibrary] CL ON C.CompetencyLibraryCode=CL.CompetencyLibraryCode inner join [dbo].[MI_OD_CompetencyJobCategory] J ON CL.CompetencyLibraryCode=J.CompetencyLibraryCode inner join [dbo].[MI_OD_CompetencyArea] A ON C.CAreaCode=A.CAreaCode inner join [dbo].[MI_OD_CompetencyGroup] G ON C.CGroupCode=G.CGroupCode inner join [dbo].[MI_EPRF_JobCategory] Job ON J.JobCategoryCode=job.JobCategoryCode Left Outer join [dbo].[MI_OD_CompetencyLevel] L ON J.ExpectedLevel=L.CLevelCode Left Outer join MI_EPRF_OrgLevel1 L1 ON CL.Level1Code=L1.Level1Code Left Outer join MI_EPRF_OrgLevel2 L2 ON CL.Level2Code=L2.Level2Code Left Outer join MI_EPRF_OrgLevel3 L3 ON CL.Level3Code=L3.Level3Code Left Outer join MI_EPRF_OrgLevel4 L4 ON CL.Level4Code=L4.Level4Code Left Outer join MI_EPRF_OrgLevel5 L5 ON CL.Level5Code=L5.Level5Code WHERE   CL.CompetencyBasedOn='JCAT' AND C.Deleted=0 AND L.Deleted=0", "table_requirement": "Competency Library "}
{"category": "Performance", "sql_query": "SELECT DISTINCT dbo.MI_Employer_Employee.EpfNo, dbo.MI_Employer_Employee.FirstName + ' ' + dbo.MI_Employer_Employee.Surname AS name, dbo.MI_EPRF_JobCategory.JobCategoryName, dbo.MI_EPRF_Designation.DesignationName, dbo.MI_EPRF_OrgLevel3.Name AS department, dbo.MI_EPRF_OrgLevel4.Name AS region, dbo.MI_EPRF_OrgLevel5.Name AS branch, dbo.MI_EPRF_OrgLevel6.Name AS section, dbo.MI_PMS_ActionCompleted.IsSignOff AS issignedoffbyappraiser, dbo.MI_PMS_ActionCompleted.DateCompleted AS signedoffdateappraiser, MI_PMS_ActionCompleted_1.IsSignOff AS issignedoffbyappraisee, MI_PMS_ActionCompleted_1.DateCompleted AS signedoffdateappraisee, (CASE WHEN dbo.MI_PMS_AdditionalAccomplishment.AccomplishmentStatus = 'C' THEN 'Approved' WHEN dbo.MI_PMS_AdditionalAccomplishment.AccomplishmentStatus = 'P' THEN 'Pending' WHEN dbo.MI_PMS_AdditionalAccomplishment.AccomplishmentStatus = 'R' THEN 'Rejected' ELSE '' END) AS Statusf, dbo.MI_PMS_AdditionalAccomplishment.AccomplishmentName AS statement, dbo.MI_PMS_AdditionalAccomplishment.Score, dbo.MI_PMS_AdditionalAccomplishment.Comment FROM            dbo.MI_EPRF_OrgLevel6 RIGHT OUTER JOIN dbo.MI_EPRF_Designation RIGHT OUTER JOIN dbo.MI_Employer_Employee INNER JOIN dbo.MI_PMS_Appraisee INNER JOIN dbo.MI_PMS_Appraiser ON dbo.MI_PMS_Appraisee.AppraiserId = dbo.MI_PMS_Appraiser.AppraiserId INNER JOIN dbo.MI_Employer_Employee AS MI_Employer_Employee_1 ON dbo.MI_PMS_Appraiser.AppraiserEmployeeCode = MI_Employer_Employee_1.EmployeeCode INNER JOIN dbo.MI_PMS_AdditionalAccomplishment ON dbo.MI_PMS_Appraisee.AppraiseeEmployeeCode = dbo.MI_PMS_AdditionalAccomplishment.EmployeeCode ON dbo.MI_Employer_Employee.EmployeeCode = dbo.MI_PMS_AdditionalAccomplishment.EmployeeCode LEFT OUTER JOIN dbo.MI_PMS_ActionCompleted AS MI_PMS_ActionCompleted_1 ON dbo.MI_PMS_Appraisee.AppraiseeEmployeeCode = MI_PMS_ActionCompleted_1.EmployeeCode AND dbo.MI_PMS_Appraisee.TemplateCode = MI_PMS_ActionCompleted_1.TemplateCode AND MI_PMS_ActionCompleted_1.Action = 'AA' LEFT OUTER JOIN dbo.MI_PMS_ActionCompleted ON dbo.MI_PMS_Appraiser.AppraiserEmployeeCode = dbo.MI_PMS_ActionCompleted.EmployeeCode AND dbo.MI_PMS_Appraiser.TemplateCode = dbo.MI_PMS_ActionCompleted.TemplateCode AND dbo.MI_PMS_ActionCompleted.Action = 'AA' LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel4 ON dbo.MI_Employer_Employee.Level4Code = dbo.MI_EPRF_OrgLevel4.Level4Code LEFT OUTER JOIN dbo.MI_EPRF_JobCategory ON dbo.MI_Employer_Employee.CategoryCode = dbo.MI_EPRF_JobCategory.JobCategoryCode LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel3 ON dbo.MI_Employer_Employee.Level3Code = dbo.MI_EPRF_OrgLevel3.Level3Code ON dbo.MI_EPRF_Designation.DesignationCode = dbo.MI_Employer_Employee.DesignationCode LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel5 ON dbo.MI_Employer_Employee.Level5Code = dbo.MI_EPRF_OrgLevel5.Level5Code ON dbo.MI_EPRF_OrgLevel6.Level6Code = dbo.MI_Employer_Employee.Level6Code WHERE (dbo.MI_PMS_Appraisee.Deleted = 0) AND (dbo.MI_PMS_Appraiser.Deleted = 0) AND (dbo.MI_PMS_Appraiser.AppraiserType <> 'REV') ", "table_requirement": "Additional Accomplishments Report"}
{"category": "Performance", "sql_query": "select EAPR.Number as AprNumber, EAPR.FullName as AprName, EAPP.Number as AppNumber, EAPP.FullName as AppName, APR.TemplateCode , T.TemplateName from MI_PMS_Appraiser APR left outer join MI_PMS_Appraisee APP on APR.AppraiserId=APP.AppraiserId and APP.Deleted=0 left outer join MI_Employer_Employee EAPP on EAPP.EmployeeCode=APP.AppraiseeEmployeeCode left outer join MI_Employer_Employee EAPR on EAPR.EmployeeCode=APR.AppraiserEmployeeCode Left outer join MI_PMS_Template T ON T.TemplateCode=APR.TemplateCode where APR.Deleted=0 ", "table_requirement": "Appraiser Appraisee Report"}
{"category": "Performance", "sql_query": "SELECT Appraisee.Number AS AppraiseeNumber, Apprasier.Number AS ApprasierNumber, dbo.MI_PMS_TraitSetup.TraitName, dbo.MI_PMS_TraitImportance.ImportanceName, AppraiseeTraitRating.RatingName AS  AppraiseeTraitRating, dbo.MI_PMS_TraitAssessment.EmployeeScore AS AppraiseeScore, AppraiserTraitRating.RatingName AS AppraiserTraitRating, dbo.MI_PMS_TraitAssessment.AppraiserScore AS AppraiserScore FROM            dbo.MI_PMS_TraitImportance LEFT OUTER JOIN dbo.MI_PMS_TraitRatingScales AS AppraiserTraitRating LEFT OUTER JOIN dbo.MI_PMS_Appraisee INNER JOIN dbo.MI_PMS_Appraiser ON dbo.MI_PMS_Appraisee.AppraiserId = dbo.MI_PMS_Appraiser.AppraiserId INNER JOIN dbo.MI_PMS_TraitAssessment ON dbo.MI_PMS_Appraisee.AppraiseeEmployeeCode = dbo.MI_PMS_TraitAssessment.EmployeeCode AND dbo.MI_PMS_Appraisee.TemplateCode = dbo.MI_PMS_TraitAssessment.TemplateCode INNER JOIN dbo.MI_Employer_Employee AS Appraisee ON dbo.MI_PMS_Appraisee.AppraiseeEmployeeCode = Appraisee.EmployeeCode INNER JOIN dbo.MI_Employer_Employee AS Apprasier ON dbo.MI_PMS_Appraiser.AppraiserEmployeeCode = Apprasier.EmployeeCode INNER JOIN dbo.MI_PMS_TraitSetup ON dbo.MI_PMS_TraitAssessment.TraitCode = dbo.MI_PMS_TraitSetup.TraitCode ON AppraiserTraitRating.TraitRatingCode = dbo.MI_PMS_TraitAssessment.AppraiserRatingCode AND AppraiserTraitRating.TemplateCode = dbo.MI_PMS_TraitAssessment.TemplateCode LEFT OUTER JOIN dbo.MI_PMS_TraitRatingScales AS AppraiseeTraitRating ON dbo.MI_PMS_TraitAssessment.TemplateCode = AppraiseeTraitRating.TemplateCode AND dbo.MI_PMS_TraitAssessment.EmployeeRatingCode = AppraiseeTraitRating.TraitRatingCode ON dbo.MI_PMS_TraitImportance.ImportanceId = dbo.MI_PMS_TraitAssessment.ImportanceId WHERE        (dbo.MI_PMS_TraitAssessment.Deleted = 0)", "table_requirement": "Trait Scores Report"}
{"category": "Attendance", "sql_query": "SELECT  dbo.MI_Employer_Employee.EmployeeCode, dbo.MI_Employer_Employee.Number, dbo.MI_Employer_Employee.FullName, isnull(dbo.MI_ONTIME_Attendance.Date,'1901-01-01') AS Date, isNULL(dbo.MI_ONTIME_Shift.ShiftName,'') AS ShiftName, isNULL(dbo.MI_ONTIME_Attendance.InTimeString,'') AS InTimeString, isNULL(dbo.MI_ONTIME_Attendance.OutTimeString,'') AS OutTimeString, isNULL(dbo.MI_ONTIME_Attendance.InTime2String,'') AS InTime2String, isNULL(dbo.MI_ONTIME_Attendance.OutTime2String,'') AS OutTime2String, isNULL(dbo.MI_ONTIME_Attendance.LateString,'') AS LateString, isNULL(dbo.MI_ONTIME_Attendance.WorkHrs,'') AS WorkHrs, ISNULL(dbo.MI_EPRF_OrgLevel2.Name, '') AS Level2, ISNULL(dbo.MI_EPRF_OrgLevel3.Name, '') AS Level3, ISNULL(dbo.MI_EPRF_OrgLevel4.Name, '') AS Level4, ISNULL(LT1.LeaveTypeName, '') AS '1sthalf', ISNULL(LT2.LeaveTypeName, '') AS '2nd half', ISNULL(dbo.FN_getLeave1(dbo.MI_Employer_Employee.EmployeeCode, dbo.MI_ONTIME_Attendance.Date), '') AS 'Pending Status', isnull(dbo.MI_ONTIME_BackLog.Location,'') AS Location1,isNull(dbo.MI_ONTIME_TimeLog.LocationDetails,'') AS 'Location1 Detail' , isNULL(MI_ONTIME_BackLog_2.Location,'') AS Location2,isNULL(MI_ONTIME_TimeLog_2.LocationDetails,'') AS 'Location2 Detail' , isNULL(MI_ONTIME_BackLog_3.Location,'') AS Location3,isNULL(MI_ONTIME_TimeLog_3.LocationDetails,'') AS 'Location3 Detail' , isNULL(MI_ONTIME_BackLog_4.Location,'') AS Location4,isNULL(MI_ONTIME_TimeLog_4.LocationDetails,'') AS 'Location4 Detail' , dbo.MI_Employer_Employee.Forename, dbo.MI_Employer_Employee.Surname, CASE WHEN (dbo.MI_ONTIME_Attendance.Expected=1 AND dbo.MI_ONTIME_Attendance.Present = 1) THEN 'Present' WHEN (dbo.MI_ONTIME_Attendance.Expected=1 AND dbo.MI_ONTIME_Attendance.Present = 0 AND (dbo.MI_ONTIME_Attendance.LeaveAmount+dbo.MI_ONTIME_Attendance.LeaveAmount2)>0) THEN 'On Leave' WHEN (dbo.MI_ONTIME_Attendance.Expected=1 AND dbo.MI_ONTIME_Attendance.Present = 0 AND (dbo.MI_ONTIME_Attendance.LeaveAmount+dbo.MI_ONTIME_Attendance.LeaveAmount2)=0) THEN 'Absent' ELSE '' END AS [Status], isNULL(dbo.MI_ONTIME_Attendance.InLateString,'00:00') AS InLateString, isNULL(dbo.MI_ONTIME_Attendance.OutLateString,'00:00') AS OutLateString, isNULL(dbo.MI_ONTIME_Attendance.LeaveAmount,0) AS LeaveAmount, isNULL(dbo.MI_ONTIME_Attendance.LeaveAmount2,0) AS LeaveAmount2, isNULL(EType.ETypeName,'') AS ETypeName,isnull(dbo.MI_ONTIME_Attendance.ShortLeaveAmount,0) AS ShortLeaveAmount FROM            dbo.MI_Employer_Employee LEFT OUTER JOIN dbo.MI_ONTIME_Attendance ON dbo.MI_Employer_Employee.EmployeeCode = dbo.MI_ONTIME_Attendance.EmployeeCode LEFT OUTER JOIN dbo.MI_ONTIME_BackLog ON dbo.MI_Employer_Employee.TextCardNumber =dbo.MI_ONTIME_BackLog.TextCardNumber AND CAST(CONVERT(CHAR(17), dbo.MI_ONTIME_Attendance.InTime,113) AS datetime)=CAST(CONVERT(CHAR(17), dbo.MI_ONTIME_BackLog.Time,113) AS datetime) LEFT OUTER JOIN dbo.MI_ONTIME_TimeLog ON dbo.MI_ONTIME_Backlog.Clock=dbo.MI_ONTIME_TimeLog.TimeLogID LEFT OUTER JOIN dbo.MI_ONTIME_BackLog AS MI_ONTIME_BackLog_2 ON dbo.MI_Employer_Employee.TextCardNumber =MI_ONTIME_BackLog_2.TextCardNumber AND CAST(CONVERT(CHAR(17), dbo.MI_ONTIME_Attendance.OutTime,113) AS datetime)=CAST(CONVERT(CHAR(17), MI_ONTIME_BackLog_2.Time,113) AS datetime) LEFT OUTER JOIN dbo.MI_ONTIME_TimeLog AS MI_ONTIME_TimeLog_2 ON MI_ONTIME_TimeLog_2.TimeLogID=MI_ONTIME_BackLog_2.Clock  LEFT OUTER JOIN dbo.MI_ONTIME_BackLog AS MI_ONTIME_BackLog_3 ON dbo.MI_Employer_Employee.TextCardNumber =MI_ONTIME_BackLog_3.TextCardNumber AND CAST(CONVERT(CHAR(17), dbo.MI_ONTIME_Attendance.InTime2,113) AS datetime)=CAST(CONVERT(CHAR(17), MI_ONTIME_BackLog_3.Time,113) AS datetime) LEFT OUTER JOIN dbo.MI_ONTIME_TimeLog AS MI_ONTIME_TimeLog_3 ON MI_ONTIME_TimeLog_3.TimeLogID=MI_ONTIME_BackLog_3.Clock  LEFT OUTER JOIN dbo.MI_ONTIME_BackLog AS MI_ONTIME_BackLog_4 ON dbo.MI_Employer_Employee.TextCardNumber =MI_ONTIME_BackLog_4.TextCardNumber AND CAST(CONVERT(CHAR(17), dbo.MI_ONTIME_Attendance.OutTime2,113) AS datetime)=CAST(CONVERT(CHAR(17), MI_ONTIME_BackLog_4.Time,113) AS datetime) LEFT OUTER JOIN dbo.MI_ONTIME_TimeLog AS MI_ONTIME_TimeLog_4 ON MI_ONTIME_TimeLog_3.TimeLogID=MI_ONTIME_BackLog_4.Clock   LEFT OUTER JOIN dbo.MI_ONTIME_Shift ON dbo.MI_ONTIME_Attendance.ShiftCode = dbo.MI_ONTIME_Shift.ShiftCode LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel2 ON dbo.MI_Employer_Employee.Level2Code = dbo.MI_EPRF_OrgLevel2.Level2Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel3 ON dbo.MI_Employer_Employee.Level3Code = dbo.MI_EPRF_OrgLevel3.Level3Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel4 ON dbo.MI_Employer_Employee.Level4Code = dbo.MI_EPRF_OrgLevel4.Level4Code LEFT OUTER JOIN dbo.MI_ONTIME_LeaveType AS LT1 ON dbo.MI_ONTIME_Attendance.LeaveTypeCode = LT1.LeaveTypeCode LEFT OUTER JOIN dbo.MI_ONTIME_LeaveType AS LT2 ON dbo.MI_ONTIME_Attendance.LeaveTypeCode2 = LT2.LeaveTypeCode LEFT OUTER JOIN dbo.MI_EPRF_EmploymentType AS EType ON dbo.MI_Employer_Employee.EmploymentTypeCode = EType.ETypeCode LEFT OUTER JOIN dbo.MI_RPT_Employee ON dbo.MI_Employer_Employee.EmployeeCode = dbo.MI_RPT_Employee.EmployeeCode WHERE        (dbo.MI_Employer_Employee.Deleted = 0)  AND dbo.MI_ONTIME_Attendance.Expected=1 GROUP BY dbo.MI_Employer_Employee.EmployeeCode, dbo.MI_Employer_Employee.Number, dbo.MI_Employer_Employee.FullName, dbo.MI_ONTIME_Attendance.EmployeeCode, dbo.MI_ONTIME_Attendance.Date, dbo.MI_ONTIME_Shift.ShiftName, dbo.MI_ONTIME_Attendance.InTime, dbo.MI_ONTIME_Attendance.InTimeString, dbo.MI_ONTIME_Attendance.OutTime, dbo.MI_ONTIME_Attendance.OutTimeString, dbo.MI_ONTIME_Attendance.InTime2, dbo.MI_ONTIME_Attendance.InTime2String, dbo.MI_ONTIME_Attendance.OutTime2, dbo.MI_ONTIME_Attendance.OutTime2String, dbo.MI_ONTIME_Attendance.LateString, dbo.MI_ONTIME_Attendance.WorkHrs, dbo.MI_EPRF_OrgLevel2.Name, dbo.MI_EPRF_OrgLevel3.Name, dbo.MI_EPRF_OrgLevel4.Name, LT1.LeaveTypeName, LT2.LeaveTypeName, dbo.MI_ONTIME_Attendance.Date, dbo.MI_Employer_Employee.Forename, dbo.MI_Employer_Employee.Surname, dbo.MI_ONTIME_Attendance.Present, dbo.MI_ONTIME_Attendance.InLateString, dbo.MI_ONTIME_Attendance.OutLateString, dbo.MI_ONTIME_Attendance.LeaveAmount, dbo.MI_ONTIME_Attendance.LeaveAmount2, EType.ETypeName,dbo.MI_ONTIME_Attendance.ShortLeaveAmount,dbo.MI_ONTIME_BackLog.Location,dbo.MI_ONTIME_TimeLog.LocationDetails, MI_ONTIME_BackLog_2.Location,MI_ONTIME_TimeLog_2.LocationDetails , MI_ONTIME_BackLog_3.Location,MI_ONTIME_TimeLog_3.LocationDetails , MI_ONTIME_BackLog_4.Location,MI_ONTIME_TimeLog_4.LocationDetails ,dbo.MI_ONTIME_Attendance.Expected ", "table_requirement": "Attendance Analysis Report"}
{"category": "Attendance", "sql_query": "SELECT  dbo.MI_Employer_Employee.Number, dbo.MI_Employer_Employee.FullName, dbo.MI_EPRF_OrgLevel3.Name AS Company, dbo.MI_EPRF_OrgLevel4.Name AS Unit, dbo.MI_ONTIME_Shift.ShiftName, CONVERT(varchar(23), dbo.MI_ONTIME_Attendance.Date, 101) AS InDate, CASE WHEN dbo.MI_ONTIME_Attendance.Present = 1 THEN 'Yes' ELSE 'No' END AS Present, dbo.MI_ONTIME_Attendance.InTimeString, dbo.MI_ONTIME_Attendance.OutTimeString, CONVERT(varchar(23), dbo.MI_ONTIME_Attendance.OutDate, 101) AS OutDate, dbo.MI_ONTIME_Attendance.InTime2String, dbo.MI_ONTIME_Attendance.OutTime2String, dbo.MI_ONTIME_Attendance.LateString, CASE WHEN (dbo.MI_ONTIME_Attendance.LeaveAmount + dbo.MI_ONTIME_Attendance.LeaveAmount2) = 1 THEN 'Full day' WHEN (dbo.MI_ONTIME_Attendance.LeaveAmount + dbo.MI_ONTIME_Attendance.LeaveAmount2) = 0.5 THEN 'Half day' ELSE 'No' END AS Leave, dbo.MI_ONTIME_Attendance.WorkHrs, CASE WHEN dbo.MI_Employer_Employee.Rostered = 1 THEN 'Yes' ELSE 'No' END AS Rostered, dbo.MI_ONTIME_Attendance.Expected, dbo.MI_Employer_Employee.FirstName, dbo.MI_EPRF_JobCategory.JobCategoryName, dbo.MI_Employer_Employee.EpfNo, dbo.MI_EPRF_OrgLevel5.Name AS level5, dbo.MI_Employer_Employee.Surname FROM            dbo.MI_ONTIME_Attendance INNER JOIN dbo.MI_Employer_Employee ON dbo.MI_ONTIME_Attendance.EmployeeCode = dbo.MI_Employer_Employee.EmployeeCode INNER JOIN dbo.MI_ONTIME_Shift ON dbo.MI_ONTIME_Attendance.ShiftCode = dbo.MI_ONTIME_Shift.ShiftCode LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel3 ON dbo.MI_Employer_Employee.Level3Code = dbo.MI_EPRF_OrgLevel3.Level3Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel4 ON dbo.MI_Employer_Employee.Level4Code = dbo.MI_EPRF_OrgLevel4.Level4Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel5 ON dbo.MI_Employer_Employee.Level5Code = dbo.MI_EPRF_OrgLevel5.Level5Code LEFT OUTER JOIN dbo.MI_EPRF_JobCategory ON dbo.MI_Employer_Employee.CategoryCode = dbo.MI_EPRF_JobCategory.JobCategoryCode WHERE (dbo.MI_Employer_Employee.EmployeeCode <> 1) AND (dbo.MI_ONTIME_Attendance.Expected = 1) AND (dbo.MI_ONTIME_Attendance.Present = 0) AND (dbo.MI_ONTIME_Attendance.LeaveAmount + dbo.MI_ONTIME_Attendance.LeaveAmount2 < 0.5) ", "table_requirement": "Daily Absent Report"}
{"category": "Performance", "sql_query": "SELECT DISTINCT e1.Number AS AppraiseNumber, e1.FirstName + ' ' + e1.Surname AS Appraise,  org.Department AS Division, org.Unit AS Department, ts.AppraiserScore AS traitscoreappraiser,ts.EmployeeScore AS traitscoreself,gg.Score AS AppraiserGoalscore,gg.EmployeeScore AS selfgoal,m.FinalScore FROM dbo.MI_PMS_ActionCompleted AS ac INNER JOIN dbo.Vw_EmployeeView AS e1  ON ac.EmployeeCode = e1.EmployeeCode  INNER JOIN dbo.vw_eprf_EmpOrgLeavels AS org ON ac.EmployeeCode = org.EmployeeCode INNER JOIN dbo.MI_PMS_Template AS t  ON t.TemplateCode = ac.TemplateCode INNER JOIN dbo.MI_PMS_Summary AS m ON m.EmployeeCode = ac.EmployeeCode AND m.TemplateCode = t.TemplateCode LEFT JOIN dbo.MI_PMS_Goal AS gg ON gg.EmployeeCode = ac.EmployeeCode LEFT JOIN dbo.MI_PMS_TraitAssessment AS ts ON ts.EmployeeCode = ac.EmployeeCode", "table_requirement": "Performance Status Report"}
{"category": "Attendance", "sql_query": "SELECT  dbo.Vw_EmployeeView.Number, dbo.Vw_EmployeeView.FullName, dbo.vw_eprf_EmpOrgLevels.[Group] AS Level1, dbo.vw_eprf_EmpOrgLevels.Company AS Level2, dbo.vw_eprf_EmpOrgLevels.Department AS Level3, dbo.MI_ONTIME_Attendance.Date AS Date, dbo.MI_ONTIME_Shift.ShiftName, dbo.MI_ONTIME_DayType.DayTypeName, CASE WHEN dbo.MI_ONTIME_Attendance.Expected = 1 THEN 'Yes' ELSE 'No' END AS ExpectedToCome, dbo.fn_DayExpression(dbo.MI_ONTIME_Attendance.Expected, dbo.MI_ONTIME_Attendance.Present) AS PRABStatus, dbo.MI_ONTIME_Attendance.Present, dbo.MI_ONTIME_Attendance.InTimeString, dbo.MI_ONTIME_Attendance.OutTimeString, CASE WHEN Year(dbo.MI_ONTIME_Attendance.InDate2) = '1901' THEN '' ELSE CONVERT(VARCHAR(24), dbo.MI_ONTIME_Attendance.InDate2, 103) END AS InDate2, dbo.MI_ONTIME_Attendance.InTime2String, dbo.MI_ONTIME_Attendance.OutTime2String, CASE WHEN Year(dbo.MI_ONTIME_Attendance.OutDate) = '1901' THEN '' ELSE CONVERT(VARCHAR(24), dbo.MI_ONTIME_Attendance.OutDate, 103) END AS OutDate, CASE WHEN Year(dbo.MI_ONTIME_Attendance.OutDate2) = '1901' THEN '' ELSE CONVERT(VARCHAR(24), dbo.MI_ONTIME_Attendance.OutDate2, 103) END AS OutDate2, dbo.MI_ONTIME_Attendance.LateString, dbo.MI_ONTIME_Attendance.InLateString, dbo.MI_ONTIME_Attendance.MidLateString, dbo.MI_ONTIME_Attendance.OutLateString, dbo.MI_ONTIME_Attendance.OvertimeRate1String, dbo.MI_ONTIME_Attendance.OvertimeRate2String, dbo.MI_ONTIME_Attendance.OvertimeRate3String, dbo.MI_ONTIME_Attendance.OvertimeRate4String, dbo.MI_ONTIME_Attendance.OvertimeRate5String, dbo.MI_ONTIME_Attendance.OvertimeRate5ApprovedString, dbo.MI_ONTIME_Attendance.OvertimeRate6String, dbo.MI_ONTIME_LeaveType.LeaveTypeName, dbo.MI_ONTIME_Attendance.WorkHrs, dbo.MI_ONTIME_Attendance.OvertimeRate5Approved, dbo.MI_ONTIME_Attendance.InOvertimeString AS TOT, dbo.MI_ONTIME_Attendance.OvertimeRate1, dbo.MI_ONTIME_Attendance.OvertimeRate2, dbo.MI_ONTIME_Attendance.OvertimeRate3, dbo.MI_ONTIME_Attendance.OvertimeApprovalDone, dbo.MI_ONTIME_Attendance.OvertimeRate3ApprovedString, dbo.MI_ONTIME_Attendance.OvertimeRate2ApprovedString, dbo.MI_ONTIME_Attendance.OvertimeRate1ApprovedString, dbo.MI_ONTIME_Attendance.OvertimeRate1Approved, CASE WHEN dbo.MI_ONTIME_Attendance.OvertimeRate1>dbo.MI_ONTIME_Attendance.OvertimeRate1Approved THEN CONCAT(Substring(dbo.MI_ONTIME_Attendance.OvertimeRate1ApprovedString,1,2),':',RIGHT('0'+CONVERT(VARCHAR(2),(CAST(Substring(dbo.MI_ONTIME_Attendance.OvertimeRate1ApprovedString,4,5) AS int)-CAST(Substring(dbo.MI_ONTIME_Attendance.OvertimeRate1ApprovedString,4,5) AS int)%15)),2))  ELSE dbo.MI_ONTIME_Attendance.OvertimeRate1String END AS Approved_Rate1String, CASE WHEN dbo.MI_ONTIME_Attendance.OvertimeRate1>dbo.MI_ONTIME_Attendance.OvertimeRate1Approved THEN CAST((CAST(dbo.MI_ONTIME_Attendance.OvertimeRate1Approved AS decimal(18,2))-CAST(dbo.MI_ONTIME_Attendance.OvertimeRate1Approved AS decimal(18,2))%0.25) AS real) ELSE dbo.MI_ONTIME_Attendance.OvertimeRate1 END AS Approved_Rate1, CASE WHEN dbo.MI_ONTIME_Attendance.OvertimeRate2>dbo.MI_ONTIME_Attendance.OvertimeRate2Approved THEN CONCAT(Substring(dbo.MI_ONTIME_Attendance.OvertimeRate2ApprovedString,1,2),':',RIGHT('0'+CONVERT(VARCHAR(2),(CAST(Substring(dbo.MI_ONTIME_Attendance.OvertimeRate2ApprovedString,4,5) AS int)-CAST(Substring(dbo.MI_ONTIME_Attendance.OvertimeRate2ApprovedString,4,5) AS int)%15)),2))  ELSE dbo.MI_ONTIME_Attendance.OvertimeRate2String END AS Approved_Rate2String, CASE WHEN dbo.MI_ONTIME_Attendance.OvertimeRate2>dbo.MI_ONTIME_Attendance.OvertimeRate2Approved THEN CAST((CAST(dbo.MI_ONTIME_Attendance.OvertimeRate2Approved AS decimal(18,2))-CAST(dbo.MI_ONTIME_Attendance.OvertimeRate2Approved AS decimal(18,2))%0.25) AS real)  ELSE dbo.MI_ONTIME_Attendance.OvertimeRate2 END AS Approved_Rate2, CASE WHEN dbo.MI_ONTIME_Attendance.OvertimeRate3>dbo.MI_ONTIME_Attendance.OvertimeRate3Approved THEN CONCAT(Substring(dbo.MI_ONTIME_Attendance.OvertimeRate3ApprovedString,1,2),':',RIGHT('0'+CONVERT(VARCHAR(2),(CAST(Substring(dbo.MI_ONTIME_Attendance.OvertimeRate3ApprovedString,4,5) AS int)-CAST(Substring(dbo.MI_ONTIME_Attendance.OvertimeRate3ApprovedString,4,5) AS int)%15)),2))  ELSE dbo.MI_ONTIME_Attendance.OvertimeRate3String END AS Approved_Rate3String, CASE WHEN dbo.MI_ONTIME_Attendance.OvertimeRate3>dbo.MI_ONTIME_Attendance.OvertimeRate3Approved THEN CAST((CAST(dbo.MI_ONTIME_Attendance.OvertimeRate3Approved AS decimal(18,2))-CAST(dbo.MI_ONTIME_Attendance.OvertimeRate3Approved AS decimal(18,2))%0.25) AS real) ELSE dbo.MI_ONTIME_Attendance.OvertimeRate3 END AS Approved_Rate3, dbo.MI_ONTIME_Attendance.OvertimeRate2Approved, dbo.MI_ONTIME_Attendance.OvertimeRate3Approved, CASE WHEN dbo.MI_ESS_PostOvertime.OvertimeRate1Approved IS NULL THEN '00:00' ELSE dbo.MI_ESS_PostOvertime.OvertimeRate1Approved END AS ESS_OT_Approved, CASE WHEN dbo.MI_ESS_PostOvertime.OvertimeRate2Approved IS NULL THEN '00:00' ELSE dbo.MI_ESS_PostOvertime.OvertimeRate2Approved END AS ESS_OT2_Approved,dbo.Vw_EmployeeView.FirstName,dbo.Vw_EmployeeView.Surname,dbo.MI_EPRF_EmploymentType.EtypeName FROM            dbo.MI_ONTIME_Attendance LEFT OUTER JOIN dbo.Vw_EmployeeView ON dbo.MI_ONTIME_Attendance.EmployeeCode = dbo.Vw_EmployeeView.EmployeeCode LEFT OUTER JOIN dbo.MI_Employer_Employee ON dbo.MI_Employer_Employee.EmployeeCode = dbo.Vw_EmployeeView.EmployeeCode LEFT OUTER JOIN dbo.MI_EPRF_EmploymentType ON dbo.MI_Employer_Employee.EmploymentTypecode = dbo.MI_EPRF_EmploymentType.ETypeCode LEFT OUTER JOIN dbo.vw_eprf_EmpOrgLevels ON dbo.Vw_EmployeeView.EmployeeCode = dbo.vw_eprf_EmpOrgLevels.EmployeeCode LEFT OUTER JOIN dbo.MI_ONTIME_LeaveType ON dbo.MI_ONTIME_Attendance.LeaveTypeCode = dbo.MI_ONTIME_LeaveType.LeaveTypeCode LEFT OUTER JOIN dbo.MI_ONTIME_Shift ON dbo.MI_ONTIME_Attendance.ShiftCode = dbo.MI_ONTIME_Shift.ShiftCode LEFT OUTER JOIN dbo.MI_ONTIME_DayType ON dbo.MI_ONTIME_DayType.DayTypeCode = dbo.MI_ONTIME_Attendance.DayTypeCode LEFT OUTER JOIN dbo.MI_ESS_PostOverTime ON dbo.Vw_EmployeeView.EmployeeCode = dbo.MI_ESS_PostOverTime.EmployeeCode AND dbo.MI_ESS_PostOverTime.RequestStatus = 'C' AND CAST(dbo.MI_ONTIME_Attendance.Date AS Date) = CAST(dbo.MI_ESS_PostOverTime.Date AS Date) WHERE  (dbo.MI_ONTIME_Attendance.OvertimeRate1 + dbo.MI_ONTIME_Attendance.OvertimeRate2 + dbo.MI_ONTIME_Attendance.OvertimeRate3 > 0) ", "table_requirement": "Post Overtime Vs Approved OT for the perioed of Date Range"}
{"category":"Attendance","sql_query" : "SELECT  dbo.MI_Employer_Employee.EpfNo, dbo.MI_EPRF_OrgLevel5.Name, dbo.MI_EPRF_JobCategory.JobCategoryName, dbo.MI_Employer_Employee.Number, CASE WHEN year(Date) = 1901 THEN '--' ELSE CONVERT(varchar, dbo.MI_ONTIME_Attendance.Date, 101) END AS Date, dbo.MI_Employer_Employee.FullName, dbo.MI_ONTIME_Shift.ShiftName, dbo.MI_ONTIME_Attendance.InTimeString, dbo.MI_ONTIME_Attendance.OutTimeString, dbo.MI_ONTIME_Attendance.InTime2String, dbo.MI_ONTIME_Attendance.OutTime2String, CASE WHEN year(OutDate) = 1901 THEN '--' ELSE CONVERT(varchar, dbo.MI_ONTIME_Attendance.OutDate, 101) END AS OutDate, dbo.MI_ONTIME_Attendance.LateString, dbo.MI_ONTIME_Attendance.InOvertimeString, CASE WHEN year(InDate2) = 1901 THEN '--' ELSE CONVERT(varchar, dbo.MI_ONTIME_Attendance.InDate2, 101) END AS InDate2, CASE WHEN year(OutDate2) = 1901 THEN '--' ELSE CONVERT(varchar, dbo.MI_ONTIME_Attendance.OutDate2, 101) END AS OutDate2, dbo.MI_EPRF_OrgLevel1.Name AS level1, dbo.MI_EPRF_OrgLevel2.Name AS level2, dbo.MI_EPRF_OrgLevel3.Name AS level3, dbo.MI_EPRF_OrgLevel4.Name AS level4, dbo.MI_EPRF_OrgLevel5.Name AS level5, dbo.MI_EPRF_OrgLevel6.Name AS level6, dbo.MI_EPRF_OrgLevel6.Name AS Expr1, dbo.MI_EPRF_OrgLevel7.Name AS level7, dbo.MI_EPRF_OrgLevel8.Name AS level8,  dbo.MI_EPRF_OrgLevel9.Name AS level9, dbo.MI_EPRF_OrgLevel10.Name AS level10, dbo.MI_ONTIME_LeaveType.LeaveTypeName, dbo.MI_ONTIME_Attendance.LeaveAmount,  dbo.MI_ONTIME_Attendance.ShortLeaveAmount, dbo.MI_ONTIME_Attendance.Present FROM dbo.MI_ONTIME_Attendance inner join dbo.MI_Employer_Employee ON dbo.MI_ONTIME_Attendance.EmployeeCode = dbo.MI_Employer_Employee.EmployeeCode LEFT OUTER JOIN dbo.MI_RPT_Employee ON dbo.MI_Employer_Employee.EmployeeCode = dbo.MI_RPT_Employee.EmployeeCode LEFT OUTER JOIN dbo.MI_ONTIME_Shift ON dbo.MI_ONTIME_Attendance.ShiftCode = dbo.MI_ONTIME_Shift.ShiftCode LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel1 ON dbo.MI_Employer_Employee.Level1Code = dbo.MI_EPRF_OrgLevel1.Level1Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel2 ON dbo.MI_Employer_Employee.Level2Code = dbo.MI_EPRF_OrgLevel2.Level2Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel3 ON dbo.MI_Employer_Employee.Level3Code = dbo.MI_EPRF_OrgLevel3.Level3Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel4 ON dbo.MI_Employer_Employee.Level4Code = dbo.MI_EPRF_OrgLevel4.Level4Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel5 ON dbo.MI_Employer_Employee.Level5Code = dbo.MI_EPRF_OrgLevel5.Level5Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel6 ON dbo.MI_Employer_Employee.Level6Code = dbo.MI_EPRF_OrgLevel6.Level6Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel7 ON dbo.MI_Employer_Employee.Level7Code = dbo.MI_EPRF_OrgLevel7.Level7Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel8 ON dbo.MI_Employer_Employee.Level8Code = dbo.MI_EPRF_OrgLevel8.Level8Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel9 ON dbo.MI_Employer_Employee.Level9Code = dbo.MI_EPRF_OrgLevel9.Level9Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel10 ON dbo.MI_Employer_Employee.Level10Code = dbo.MI_EPRF_OrgLevel10.Level10Code LEFT OUTER JOIN dbo.MI_ONTIME_LeaveType ON dbo.MI_ONTIME_Attendance.LeaveTypeCode = dbo.MI_ONTIME_LeaveType.LeaveTypeCode LEFT OUTER JOIN dbo.MI_EPRF_JobCategory ON dbo.MI_Employer_Employee.CategoryCode = dbo.MI_EPRF_JobCategory.JobCategoryCode","table_requirement":"Provides a detailed daily breakdown of employee attendance, including shift details, in/out times, leave status, and full organizational hierarchy for each individual."}
{"category":"Recruitment&Hiring","sql_query":"SELECT rrf.RecruitmentRequisitionCode, rrf.RecruitmentRequisitionName as RRFName, CONVERT(varchar, rrf.CreatedDate, 103) as RequirementReceivedDate, CONVERT(varchar, rrf.PublishedDate, 103) as RRFDate, ISNULL(jc.JobCategoryName, 'Not Specified') as Category, ISNULL(et.ETypeName, 'Not Specified') as EmployementType, ISNULL(Desig.DesignationName, 'Not Specified') as Designation, ISNULL(org3.Name, 'Not Specified') as Department, ISNULL(rrf.Justification, 'Not Specified') as Justification, ISNULL(loc.LocationName, 'Not Specified') as Location, case when (rrf.Replacement) = 0 then 'Additional' when (rrf.Replacement) = 1 then 'Replacement' else 'Not Specified' end as AdditionalReplacement, rrf.Vacancies as NoOfVacancies, ISNULL(counts.NoofCVsShared, 0) as NoofCVsShared, ISNULL(counts.NoOfInterviewsDone, 0) as NoOfInterviewsDone, ISNULL(counts.RRFsApproved, 0) as RRFsApproved, ISNULL(counts.InterviewProgress, 0) as InterviewProgress, ISNULL(counts.NoOfferLettersGiven, 0) as NoOfOferLettersGiven, ISNULL((rrf.Vacancies - counts.NoOfferLettersGiven), 0) as RemainingVacancies, case when (position.OfferLetterSent) = 1 then CONVERT(varchar, position.OfferLetterSentDate, 103) when (position.OfferLetterSent) = 0 then ' ' else ' ' end as OfferLetterDate, ISNULL((bb.Sequence_no - aa.Sequence_no), 0) as AverageLeadTime, ISNULL(CONVERT(varchar, register.DateOfAppointment, 103), ' ') as DOA, case when (rrf.PublishStatus) = 1 then emp.FirstName + ' ' + emp.Surname When (rrf.PublishStatus) = 0 then 'Not Published' else 'Not Specified' end as Responsibility, rrf.Comments as Remarks, case when (rrf.IsClosed) = 1 or (rrf.RecruitmentRequisitionClosingDate < GETDATE()) then 'Closed' when (rrf.IsClosed) = 0 then 'Open' else 'Not Specified' end as OpenClosedHold, sources.TopJobsFacebook, CONVERT(varchar, rrf.PublishedDate, 103) as LastAdvertisedDate FROM MI_REC_RecruitmentRequisition as rrf LEFT OUTER JOIN MI_EPRF_OrgLevel3 as org3 on org3.Level3Code = rrf.Level3Code LEFT OUTER JOIN MI_EPRF_Designation as Desig on Desig.DesignationCode = rrf.DesignationCode LEFT OUTER JOIN MI_EPRF_Location as loc on loc.LocationCode = rrf.LocationCode LEFT OUTER JOIN MI_REC_AppliedPosition as position on position.RecruitmentRequisitionCode = rrf.RecruitmentRequisitionCode LEFT OUTER JOIN MI_REC_ApplicantsRegister as register on register.JobAppCode = position.JobAppCode LEFT OUTER JOIN MI_EPRF_JobCategory as jc on rrf.JobCategoryCode = jc.JobCategoryCode LEFT OUTER JOIN MI_EPRF_EmploymentType as et on rrf.EmploymentTypeCode = et.ETypeCode LEFT OUTER JOIN MI_Employer_Employee as emp on emp.EmployeeCode = rrf.CreatedBy LEFT OUTER JOIN (SELECT req.RecruitmentRequisitionCode, count(distinct position.JobAppCode) as NoofCVsShared, sum(case when position.IsInterviewScheduled = 1 and position.ActivityCode <> 6 then 1 else 0 end) as NoOfInterviewsDone, sum(case when position.ProcessState = 'SELECT' then 1 else 0 end) as RRFsApproved, sum(case when position.ProcessState = 'PROCESS' then 1 else 0 end) as InterviewProgress, sum(case when position.OfferLetterSent = 1 then 1 else 0 end) as NoOfferLettersGiven, sum(case when position.ApplicantStatus = 'C' then 1 else 0 end) as OfferAccepted, sum(case when position.ApplicantStatus = 'R' then 1 else 0 end) as DeclinedTheOffer FROM MI_REC_AppliedPosition as position LEFT OUTER JOIN MI_REC_JobApplication as application on position.JobAppCode = application.JobAppCode LEFT OUTER JOIN MI_REC_Activities as activities on position.ActivityCode = activities.ActivityCode LEFT OUTER JOIN MI_REC_RecruitmentRequisition as Req on position.RecruitmentRequisitionCode = Req.RecruitmentRequisitionCode GROUP BY req.RecruitmentRequisitionCode) as counts on counts.RecruitmentRequisitionCode = rrf.RecruitmentRequisitionCode LEFT OUTER JOIN (SELECT ROW_NUMBER() OVER (ORDER BY date) AS Sequence_no, Date FROM (SELECT distinct(Date) FROM MI_ONTIME_Calendar WHERE DayType = 1) Base) aa on cast(rrf.CreatedDate as date) = aa.Date LEFT OUTER JOIN (SELECT ROW_NUMBER() OVER (ORDER BY date) AS Sequence_no, Date FROM (SELECT distinct(Date) FROM MI_ONTIME_Calendar WHERE DayType = 1) Base) bb on cast(position.OfferLetterSentDate as date) = bb.Date LEFT OUTER JOIN (SELECT rrf.RecruitmentRequisitionCode, case when (sour.SourceCode) = 1 or (sour.SourceCode) = 12 then 'Advertised' else sour.SourceName end as TopJobsFacebook FROM MI_REC_AppliedPosition as position LEFT OUTER JOIN MI_REC_JobApplication as applicant on applicant.JobAppCode = position.JobAppCode LEFT OUTER JOIN MI_REC_JobApplicationSource as sour on sour.SourceCode = applicant.JobAppSourceCode LEFT OUTER JOIN MI_REC_RecruitmentRequisition as rrf on rrf.RecruitmentRequisitionCode = position.RecruitmentRequisitionCode WHERE rrf.Deleted = 0 and sour.Deleted = 0 GROUP BY rrf.RecruitmentRequisitionCode, sour.SourceName, sour.SourceCode) as sources on sources.RecruitmentRequisitionCode = rrf.RecruitmentRequisitionCode WHERE rrf.Deleted = 0","table_requirement": "Detailed report on RRF status including CV sharing, interview progress, offer letters, and recruitment source analysis."}
{"category":"Recruitment&Hiring","sql_query":"SELECT JA.NicNumber, JA.JobAppCode, AP.RecruitmentRequisitionCode, JA.EmployeeCode, '' AS Number, '' AS EPFNo, JA.FirstName + ' ' + JA.Surname AS EmpName, dbo.MI_Admin_TemplateSection.SectionTitle, dbo.MI_Admin_TemplateQuestion.QuestionTitle, CASE WHEN dbo.MI_Admin_TemplateResponse.AnswerTypeId IN (1, 2) THEN dbo.MI_Admin_TemplateResponse.AnswerText WHEN MI_Admin_TemplateResponse.AnswerTypeId = 4 THEN dbo.Get_ChkBoxAnswers (MI_Admin_TemplateResponse.AnswerIntMultiple) ELSE (SELECT AnswerTitle FROM [MI_Admin_TemplateAnswer] WHERE AnswerId = dbo.MI_Admin_TemplateResponse.AnswerInt) END AS Answer, CASE WHEN AP.ProcessState = 'SELECT' THEN 'SELECTED' WHEN AP.ProcessState = 'P' THEN 'PENDING' WHEN AP.ProcessState = 'REJECT' THEN 'REJECTED' WHEN AP.ProcessState = 'PROCESS' THEN 'PROCESS' END AS ProcessState FROM dbo.MI_Admin_TemplateQuestion LEFT OUTER JOIN dbo.MI_Admin_TemplateSection ON dbo.MI_Admin_TemplateQuestion.SectionId = dbo.MI_Admin_TemplateSection.SectionId AND dbo.MI_Admin_TemplateQuestion.TemplateId = dbo.MI_Admin_TemplateSection.TemplateId LEFT OUTER JOIN dbo.MI_Admin_TemplateResponse ON dbo.MI_Admin_TemplateQuestion.TemplateId = dbo.MI_Admin_TemplateResponse.TemplateId AND dbo.MI_Admin_TemplateQuestion.QuestionId = dbo.MI_Admin_TemplateResponse.QuestionId LEFT OUTER JOIN MI_REC_JobApplication AS JA ON JA.JobAppCode = MI_Admin_TemplateResponse.EmployeeCode LEFT OUTER JOIN MI_REC_AppliedPosition AS AP ON JA.JobAppCode = AP.JobAppCode WHERE (JA.ApplicationType = 'external') ORDER BY AP.RecruitmentRequisitionCode, dbo.MI_Admin_TemplateQuestion.SectionId, dbo.MI_Admin_TemplateQuestion.QuestionOrder","table_requirement": "Interview Evaluation Report (External Candidates)"}
{"category":"Recruitment&Hiring","sql_query":"SELECT RecruitmentRequisitionName, Desg.DesignationName, PublishedDate, [Group].Name AS GroupName, BusinessUnit.Name AS BusinessUnitName, Vacancies, ReportingPerson.FirstName + ' ' + ReportingPerson.Surname AS ReportingPerson, CommenceWorkOn, Cat.JobCategoryName, EType.ETypeName, GradeName, Cc.CostCenterName, Req.AgeText, ExperienceYears, Exposure, KeyResponsibilities, EducationalQualifications, EducationalQualificationsDesirable, QualificationsEntryRequirments, RequiredExperiences, RequiredExperiencesDesirable, RequiredTrainings, RequiredTrainingsDesirable, TechnicalCompetencies, SkillsRequired, KeyDeliverables, OtherRequirments, SpecialAttributes, Justification, JustifiedBy.FirstName + ' ' + JustifiedBy.Surname AS JustifiedBy, JustificationDate, CASE WHEN ApprovalStatus = 'C' THEN 'Approved' WHEN ApprovalStatus = 'P' THEN 'Pending' WHEN ApprovalStatus = 'R' THEN 'Rejected' ELSE 'Status Not Specified' END AS ApprovalStatus, CreatedBy.FirstName + ' ' + CreatedBy.Surname AS CreatedBy, CreatedBy.Number AS CreatorNumber FROM MI_REC_RecruitmentRequisition AS Req LEFT OUTER JOIN MI_EPRF_Designation AS Desg ON Req.DesignationCode = Desg.DesignationCode LEFT OUTER JOIN MI_EPRF_OrgLevel1 AS [Group] ON Req.Level1Code = [Group].Level1Code LEFT OUTER JOIN MI_EPRF_OrgLevel2 AS [BusinessUnit] ON Req.Level2Code = [BusinessUnit].Level2Code LEFT OUTER JOIN MI_Employer_Employee AS ReportingPerson ON Req.ReportingPersonCode = ReportingPerson.EmployeeCode LEFT OUTER JOIN MI_EPRF_JobCategory AS Cat ON Req.JobCategoryCode = Cat.JobCategoryCode LEFT OUTER JOIN MI_EPRF_EmploymentType AS EType ON Req.EmploymentTypeCode = EType.ETypeCode LEFT OUTER JOIN MI_EPRF_Grade AS Grade ON Grade.GradeCode = Req.GradeCode LEFT OUTER JOIN MI_EPRF_CostCenter AS Cc ON Cc.CostCenterCode = Req.CostCenterCode LEFT OUTER JOIN MI_Employer_Employee AS JustifiedBy ON Req.JustificationBy = JustifiedBy.EmployeeCode LEFT OUTER JOIN MI_Employer_Employee AS CreatedBy ON Req.CreatedBy = CreatedBy.EmployeeCode","table_requirement": "Recruitment Requisition Report"}
{"category":"Recruitment&Hiring","table_requirement": "Appraiser Appraisee Report", "sql_query": "select EAPR.Number as AprNumber, EAPR.FullName as AprName, EAPP.Number as AppNumber, EAPP.FullName as AppName, APR.TemplateCode , T.TemplateName\nfrom MI_PMS_Appraiser APR \nleft outer join MI_PMS_Appraisee APP on APR.AppraiserId=APP.AppraiserId and APP.Deleted=0\nleft outer join MI_Employer_Employee EAPP on EAPP.EmployeeCode=APP.AppraiseeEmployeeCode\nleft outer join MI_Employer_Employee EAPR on EAPR.EmployeeCode=APR.AppraiserEmployeeCode\nLeft outer join MI_PMS_Template T ON T.TemplateCode=APR.TemplateCode\nwhere APR.Deleted=0 order by EAPR.Number ASC"}
{"category":"Recruitment&Hiring","table_requirement": "Recruitment Requisition Module Usage", "sql_query": "SELECT        CAST(CreatedDate AS date) AS CreatedDate\nFROM            dbo.MI_REC_RecruitmentRequisition"}
{"category":"Recruitment&Hiring","table_requirement": "Recruitment Closed Position_Report", "sql_query": "SELECT DISTINCT \n                         dbo.MI_EPRF_OrgLevel3.Name, SUM(dbo.MI_REC_RecruitmentRequisition.Vacancies) AS netnew, SUM(CASE WHEN dbo.MI_REC_RecruitmentRequisition.Replacement = 'True' THEN 1 ELSE 0 END) \n                         AS replacement\nFROM            dbo.MI_REC_RecruitmentRequisition INNER JOIN\n                         dbo.MI_EPRF_OrgLevel3 ON dbo.MI_REC_RecruitmentRequisition.Level3Code = dbo.MI_EPRF_OrgLevel3.Level3Code AND dbo.MI_REC_RecruitmentRequisition.Deleted = 0 INNER JOIN\n                         dbo.MI_REC_AppliedPosition ON dbo.MI_REC_RecruitmentRequisition.RecruitmentRequisitionCode = dbo.MI_REC_AppliedPosition.RecruitmentRequisitionCode AND  dbo.MI_REC_AppliedPosition.Deleted = 0 INNER JOIN\n                         dbo.MI_OD_SetupBudgetYear ON dbo.MI_REC_RecruitmentRequisition.BudgetPeriodId = dbo.MI_OD_SetupBudgetYear.BudgetPeriodId WHERE   AND (dbo.MI_REC_AppliedPosition.OfferLetterSent = 1) GROUP BY dbo.MI_EPRF_OrgLevel3.Name"}
{"category":"Recruitment&Hiring","table_requirement": "Recruitment_ONB_DialogWorker", "sql_query": "SELECT        B.EmployeeCode, B.Number AS ApplicantNumber, B.PrevoiusEpfNumber AS ApplicantName, A.EmployeeNumber, A.Name AS EmployeeName, A.Company, A.Division, C.RelationshipTypeName, A.Comments, \n                         D.JobAppCode, E.RecruitmentRequisitionCode\nFROM            MI_CUSTOM_ONB_DialogWorker AS A INNER JOIN\n                         MI_Employer_Employee AS B ON A.EmployeeCode = B.EmployeeCode INNER JOIN\n                         MI_EPRF_RelationshipType AS C ON A.RelationshipTypeCode = C.RelationshipTypeCode INNER JOIN\n                         MI_REC_JobApplication AS D ON A.EmployeeCode = D.EmployeeCode INNER JOIN MI_REC_AppliedPosition AS E ON D.JobAppCode = E.JobAppCode "}
{"category":"Recruitment&Hiring","table_requirement": "Recruitment_ONB_DialogWorker", "sql_query": "SELECT        B.EmployeeCode, B.Number, B.PrevoiusEpfNumber AS DisplayName, A.CompanyName, A.Position, A.NatureOfEngagement, (CASE WHEN FinanciallyBenefited = 1 THEN 'Yes' ELSE 'No' END) \n                         AS FinanciallyBenefited, A.Comments, C.JobAppCode, D.RecruitmentRequisitionCode\nFROM            MI_CUSTOM_ONB_InvolvedBusiness AS A INNER JOIN\n                         MI_Employer_Employee AS B ON A.EmployeeCode = B.EmployeeCode INNER JOIN\n                         MI_REC_JobApplication AS C ON A.EmployeeCode = C.EmployeeCode INNER JOIN\n                         MI_REC_AppliedPosition AS D ON C.JobAppCode = D.JobAppCode\nWHERE        (B.Deleted = 0) "}
{"category":"Recruitment&Hiring","table_requirement": "Recruitment_Pending_Positions_Duration_Report", "sql_query": "SELECT        dbo.MI_EPRF_OrgLevel3.Name, SUM(CASE WHEN datediff(mm, dbo.MI_Admin_RequestQ.CompletedDate, dbo.mi_employer_employee.CreatedDate) BETWEEN 0 AND 3 THEN 1 ELSE 0 END) \n                         AS threemonths, SUM(CASE WHEN datediff(mm, dbo.MI_Admin_RequestQ.CompletedDate, dbo.mi_employer_employee.CreatedDate) BETWEEN 4 AND 6 THEN 1 ELSE 0 END) AS betweenthreetosix, \n                         SUM(CASE WHEN datediff(mm, dbo.MI_Admin_RequestQ.CompletedDate, dbo.mi_employer_employee.CreatedDate) BETWEEN 7 AND 12 THEN 1 ELSE 0 END) AS betweenseverntotwelve, \n                         SUM(CASE WHEN datediff(mm, dbo.MI_Admin_RequestQ.CompletedDate, dbo.mi_employer_employee.CreatedDate) > 12 THEN 1 ELSE 0 END) AS morethanYear\nFROM            dbo.MI_REC_RecruitmentRequisition INNER JOIN\n                         dbo.MI_Admin_RequestQ ON dbo.MI_REC_RecruitmentRequisition.RequestId = dbo.MI_Admin_RequestQ.RequestId AND dbo.MI_REC_RecruitmentRequisition.Deleted = 0 INNER JOIN\n                         dbo.MI_Employer_Employee ON dbo.MI_REC_RecruitmentRequisition.Level3Code = dbo.MI_Employer_Employee.Level3Code INNER JOIN\n                         dbo.MI_EPRF_OrgLevel3 ON dbo.MI_Employer_Employee.Level3Code = dbo.MI_EPRF_OrgLevel3.Level3Code INNER JOIN\n                         dbo.MI_OD_SetupBudgetYear ON dbo.MI_REC_RecruitmentRequisition.BudgetPeriodId = dbo.MI_OD_SetupBudgetYear.BudgetPeriodId AND dbo.MI_OD_SetupBudgetYear.Deleted = 0  GROUP BY dbo.MI_EPRF_OrgLevel3.Name"}
{"category":"Recruitment&Hiring","table_requirement": "Recruitment_Pending_Positions_Recruitment_Status_Report", "sql_query": "SELECT        dbo.MI_EPRF_OrgLevel3.Name, SUM(CASE WHEN dbo.MI_REC_AppliedPosition.ApplicantStateCode = 1 AND dbo.MI_REC_AppliedPosition.ActivityCode = 0 THEN 1 ELSE 0 END) AS cv_Sourcing, \n                         SUM(CASE WHEN dbo.MI_REC_AppliedPosition.ApplicantStateCode = 1 AND dbo.MI_REC_AppliedPosition.ActivityCode <> 0 THEN 1 ELSE 0 END) AS interview_feedback, \n                         SUM(CASE WHEN dbo.MI_REC_AppliedPosition.ApplicantStateCode = 0 AND dbo.MI_REC_AppliedPosition.ActivityCode = 0 THEN 1 ELSE 0 END) AS notstarted\nFROM            dbo.MI_REC_RecruitmentRequisition INNER JOIN\n                         dbo.MI_REC_AppliedPosition ON dbo.MI_REC_RecruitmentRequisition.RecruitmentRequisitionCode = dbo.MI_REC_AppliedPosition.RecruitmentRequisitionCode AND \n                         dbo.MI_REC_RecruitmentRequisition.Deleted = 0 INNER JOIN\n                         dbo.MI_EPRF_OrgLevel3 ON dbo.MI_REC_RecruitmentRequisition.Level3Code = dbo.MI_EPRF_OrgLevel3.Level3Code INNER JOIN\n                         dbo.MI_OD_SetupBudgetYear ON dbo.MI_REC_RecruitmentRequisition.BudgetPeriodId = dbo.MI_OD_SetupBudgetYear.BudgetPeriodId AND dbo.MI_OD_SetupBudgetYear.Deleted = 0 GROUP BY dbo.MI_EPRF_OrgLevel3.Name"}
{"category":"Recruitment&Hiring","table_requirement": "Recruitment_Pending_Positions_Report", "sql_query": "SELECT DISTINCT \n                         dbo.MI_EPRF_OrgLevel3.Name, SUM(dbo.MI_REC_RecruitmentRequisition.Vacancies) AS netnew, SUM(CASE WHEN dbo.MI_REC_RecruitmentRequisition.Replacement = 'True' THEN 1 ELSE 0 END) \n                         AS replacement\nFROM            dbo.MI_REC_RecruitmentRequisition INNER JOIN\n                         dbo.MI_EPRF_OrgLevel3 ON dbo.MI_REC_RecruitmentRequisition.Level3Code = dbo.MI_EPRF_OrgLevel3.Level3Code AND dbo.MI_REC_RecruitmentRequisition.Deleted = 0 INNER JOIN\n                         dbo.MI_REC_AppliedPosition ON dbo.MI_REC_RecruitmentRequisition.RecruitmentRequisitionCode = dbo.MI_REC_AppliedPosition.RecruitmentRequisitionCode AND \n                         dbo.MI_REC_AppliedPosition.Deleted = 0 INNER JOIN\n                         dbo.MI_OD_SetupBudgetYear ON dbo.MI_REC_RecruitmentRequisition.BudgetPeriodId = dbo.MI_OD_SetupBudgetYear.BudgetPeriodId WHERE (dbo.MI_REC_AppliedPosition.OfferLetterSent = 0)\nGROUP BY dbo.MI_EPRF_OrgLevel3.Name"}
{"category":"Recruitment&Hiring","table_requirement": "Recruitment_Weekly_Net_Movements_Report", "sql_query": "SELECT        dbo.MI_EPRF_OrgLevel3.Name, SUM(CASE WHEN dbo.MI_REC_RecruitmentRequisition.ApprovalStatus = 'C' AND dbo.MI_REC_RecruitmentRequisition.Vacancies = 1 THEN 1 ELSE 0 END) AS newadditions, \n                         SUM(CASE WHEN dbo.MI_REC_AppliedPosition.OfferLetterSent = 1 THEN 1 ELSE 0 END) AS closedpossions\nFROM            dbo.MI_REC_RecruitmentRequisition INNER JOIN\n                         dbo.MI_EPRF_OrgLevel3 ON dbo.MI_REC_RecruitmentRequisition.Level3Code = dbo.MI_EPRF_OrgLevel3.Level3Code AND dbo.MI_REC_RecruitmentRequisition.Deleted = 0 INNER JOIN\n                         dbo.MI_REC_AppliedPosition ON dbo.MI_REC_RecruitmentRequisition.RecruitmentRequisitionCode = dbo.MI_REC_AppliedPosition.RecruitmentRequisitionCode AND \n                         dbo.MI_REC_AppliedPosition.Deleted = 0 INNER JOIN\n                         dbo.MI_OD_SetupBudgetYear ON dbo.MI_REC_RecruitmentRequisition.BudgetPeriodId = dbo.MI_OD_SetupBudgetYear.BudgetPeriodId AND dbo.MI_OD_SetupBudgetYear.Deleted = 0 GROUP BY dbo.MI_EPRF_OrgLevel3.Name"}
{"category": "Leave", "sql_query": "SELECT MI_Employer_Employee.FullName, MI_Employer_Employee.NumberFROM  MI_ONTIME_Leave INNER JOIN MI_Employer_Employee ON MI_ONTIME_Leave.EmployeeCode = MI_Employer_Employee.EmployeeCode WHERE (MI_ONTIME_Leave.LeaveTypeCode = 42) AND (MI_ONTIME_Leave.LeaveYear = 2020) AND (MI_ONTIME_Leave.RequestStatus = 'p') ", "table_requirement": "Employee Pending leave given date Range"}
{"category": "Leave", "sql_query": "SELECT MI_Employer_Employee.Number, MI_Employer_Employee.FullName, MI_ONTIME_Leave.LeaveYear, MI_ONTIME_Leave.LeaveTypeCode, MI_ONTIME_Leave.StartDate, MI_ONTIME_Leave.EndDate,  MI_ONTIME_Leave.NoOfDays, MI_ONTIME_LeaveType.LeaveTypeName FROM  MI_Employer_Employee INNER JOIN MI_ONTIME_Leave ON MI_Employer_Employee.EmployeeCode = MI_ONTIME_Leave.EmployeeCode INNER JOIN MI_ONTIME_LeaveType ON MI_ONTIME_Leave.LeaveTypeCode = MI_ONTIME_LeaveType.LeaveTypeCode WHERE  (MI_ONTIME_Leave.LeaveTypeCode IN (36, 38, 39, 42)) and MI_Employer_Employee.deleted=0 and  MI_ONTIME_Leave.requeststatus not in('D')", "table_requirement": "Employee's Leave Period for time Range"}
{"category": "Leave", "sql_query": "SELECT Vw_EmployeeView.Number,Vw_EmployeeView.EpfNo, Vw_EmployeeView.DisplayName, vw_eprf_EmpOrgLeavels.[Group], vw_eprf_EmpOrgLeavels.Company, vw_eprf_EmpOrgLeavels.Department, vw_eprf_EmpOrgLeavels.Unit,  vw_eprf_EmpOrgLeavels.[Sub Unit], MI_ONTIME_LeaveType.LeaveTypeName, CASE WHEN MI_ONTIME_LeaveType.Unlimited = 0 THEN MI_ONTIME_LeaveAllocation.Allocated ELSE '' END AS Allocated,  MI_ONTIME_LeaveAllocation.Used, MI_ONTIME_LeaveAllocation.LeaveYear,  CASE WHEN MI_ONTIME_LeaveType.Unlimited = 0 THEN MI_ONTIME_LeaveAllocation.Allocated - MI_ONTIME_LeaveAllocation.Used ELSE MI_ONTIME_LeaveAllocation.Used END AS ActualBalance,  MI_ONTIME_LeaveType.Unlimited FROM  dbo.Vw_EmployeeView INNER JOIN dbo.MI_Employer_Employee ON dbo.Vw_EmployeeView.EmployeeCode = dbo.MI_Employer_Employee.EmployeeCode INNER JOIN dbo.vw_eprf_EmpOrgLeavels ON dbo.Vw_EmployeeView.EmployeeCode = dbo.vw_eprf_EmpOrgLeavels.EmployeeCode INNER JOIN dbo.MI_ONTIME_LeaveAllocation ON dbo.MI_Employer_Employee.EmployeeCode = dbo.MI_ONTIME_LeaveAllocation.EmployeeCode INNER JOIN dbo.MI_ONTIME_LeaveType ON dbo.MI_ONTIME_LeaveAllocation.LeaveTypeCode = dbo.MI_ONTIME_LeaveType.LeaveTypeCode INNER JOIN dbo.MI_RPT_Employee ON dbo.MI_Employer_Employee.EmployeeCode = dbo.MI_RPT_Employee.EmployeeCode WHERE  dbo.MI_ONTIME_LeaveAllocation.Deleted = 0", "table_requirement": "Leave Allocation & Utilization for the year of selected Year"}
{"category": "Leave", "sql_query": "SELECT DISTINCT  dbo.Vw_EmployeeView.Number, dbo.Vw_EmployeeView.DisplayName, lv.[Group], lv.Company, lv.Department, lv.Unit, lv.[Sub Unit], lt_1.LeaveTypeName, dbo.Vw_EmployeeView.EmployeeCode, l.StartDate, l.EndDate, l.NoOfDays,  l.Remarks, MONTH(l.StartDate) AS LeaveStartMonth, { fn MONTHNAME(l.StartDate) } AS MonthName,  CASE WHEN l.RequestStatus = 'C' THEN 'Confirm' WHEN l.RequestStatus = 'P' THEN 'Pending' WHEN l.RequestStatus = 'D' THEN 'Self Cancelled' WHEN l.RequestStatus = 'R' THEN 'Rejected' END AS RequestStatus,  CASE WHEN StartDateSession = 'FH' AND EndDateSession = 'FH' THEN 'First Half' WHEN StartDateSession = 'SH' AND EndDateSession = 'SH' THEN 'Second Half' END AS SessionTime, dbo.Vw_EmployeeView.EpfNo,  l.CreatedDate AS Applieddate FROM   dbo.Vw_EmployeeView INNER JOIN dbo.MI_Employer_Employee AS e ON dbo.Vw_EmployeeView.EmployeeCode = e.EmployeeCode INNER JOIN dbo.vw_eprf_EmpOrgLeavels AS lv ON dbo.Vw_EmployeeView.EmployeeCode = lv.EmployeeCode INNER JOIN dbo.MI_ONTIME_Leave AS l ON lv.EmployeeCode = l.EmployeeCode INNER JOIN dbo.MI_ONTIME_LeaveType AS lt_1 ON l.LeaveTypeCode = lt_1.LeaveTypeCode INNER JOIN dbo.MI_RPT_Employee ON dbo.Vw_EmployeeView.EmployeeCode = dbo.MI_RPT_Employee.EmployeeCode WHERE  (l.RequestStatus = 'P' OR l.RequestStatus = 'C')  ORDER BY RequestStatus, dbo.Vw_EmployeeView.Number", "table_requirement": "Leave details report for Date Range"}
{"category": "Leave", "sql_query": "select  E.Number,E.FullName,Convert(Varchar,A.date,103) as [date],A.LieuPayment from MI_Employer_Employee E left outer join MI_ONTIME_Attendance A ON A.EmployeeCode=E.EmployeeCode where lieu=1 ORDER BY e.Number", "table_requirement": "Report for Earned Lieu Leaves"}
{"category": "Leave", "sql_query": "SELECT E1.Number, E1.EpfNo, E1.fullname, ES.Date, ES.FromTimeString,  ES.ToTimeString,  ES.ShortLeaveSession, CONVERT(VARCHAR,ES.HourString) as HSTRING, (CASE WHEN ES.RequestStatus='C' THEN 'Approved' WHEN ES.RequestStatus= 'D' THEN 'Approved By User' WHEN ES.RequestStatus = 'R' THEN 'Rejected' WHEN ES.RequestStatus = 'P' THEN 'Pending' WHEN ES.RequestStatus = 'H' THEN 'Half Approved' WHEN ES.RequestStatus IS NULL THEN '' END) AS StatusString FROM dbo.mi_Ess_ShortLEave as ES INNER JOIN dbo.MI_Employer_Employee AS E1 ON ES.EmployeeCode = E1.EmployeeCode WHERE Es.Deleted =0 UNION SELECT E2.Number,E2.EpfNo,E2.FullName, OS.Date, OS.FromTimeString, OS.ToTimeString, OS.ShortLeaveSession, CONVERT(VARCHAR,dbo.fn_Decimal_TO_Hrs(OS.Hours)) as HourString, 'Admin Short Leave' AS StatusString FROM dbo.mi_ontime_shortleave as OS INNER JOIN dbo.MI_Employer_Employee AS E2 ON OS.EmployeeCode = E2.EmployeeCode WHERE OS.Deleted =0 ", "table_requirement": "Employee Short Leave details Report "}
{"category": "Resignation", "sql_query": "SELECT dbo.MI_Employer_Employee.Number AS EmpNumber, dbo.MI_Employer_Employee.FullName AS EmpName, MI_Employer_Employee_1.Number AS RPT_Number, MI_Employer_Employee_1.FullName AS RPT_Name,  dbo.MI_DYN_EmployeeResignation.RequestDate, dbo.MI_DYN_EmployeeResignation.EffectDate, dbo.MI_DYN_EmployeeResignation.LastWorkingDate, dbo.MI_DYN_EmployeeResignation.Remarks,  ISNULL(dbo.MI_DYN_ResignationType.ResignationTypeName, '') AS ResignationTypeName, dbo.MI_EPRF_JobCategory.JobCategoryName, dbo.MI_EPRF_Designation.DesignationName, dbo.MI_EPRF_Grade.GradeName,  dbo.MI_EPRF_Location.LocationName, dbo.MI_EPRF_EmploymentType.ETypeName, ISNULL(dbo.MI_EPRF_OrgLevel1.Name, '') AS Level1Name, ISNULL(dbo.MI_EPRF_OrgLevel2.Name, '') AS Level2Name,  ISNULL(dbo.MI_EPRF_OrgLevel3.Name, '') AS Level3Name, ISNULL(dbo.MI_EPRF_OrgLevel4.Name, '') AS Level4Name, ISNULL(dbo.MI_EPRF_OrgLevel5.Name, '') AS Level5Name, ISNULL(dbo.MI_EPRF_OrgLevel6.Name, '')  AS Level6Name, ISNULL(dbo.MI_EPRF_OrgLevel7.Name, '') AS Level7Name, ISNULL(dbo.MI_EPRF_OrgLevel8.Name, '') AS Level8Name, ISNULL(dbo.MI_EPRF_OrgLevel9.Name, '') AS Level9Name, ISNULL(dbo.MI_EPRF_OrgLevel10.Name, '') AS Level10Name, dbo.MI_Employer_Employee.EmployeeCodeFROM dbo.MI_DYN_EmployeeResignation INNER JOINdbo.MI_Employer_Employee ON dbo.MI_DYN_EmployeeResignation.EmployeeCode = dbo.MI_Employer_Employee.EmployeeCode INNER JOIN dbo.MI_Employer_Employee AS MI_Employer_Employee_1 ON dbo.MI_DYN_EmployeeResignation.ImmidiateManager = MI_Employer_Employee_1.EmployeeCode INNER JOIN dbo.MI_DYN_EmployeeMovementHistory ON dbo.MI_DYN_EmployeeResignation.EmployeeCode = dbo.MI_DYN_EmployeeMovementHistory.EmployeeCode LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel10 ON dbo.MI_DYN_EmployeeMovementHistory.Level10Code = dbo.MI_EPRF_OrgLevel10.Level10Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel9 ON dbo.MI_DYN_EmployeeMovementHistory.Level9Code = dbo.MI_EPRF_OrgLevel9.Level9Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel8 ON dbo.MI_DYN_EmployeeMovementHistory.Level8Code = dbo.MI_EPRF_OrgLevel8.Level8Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel7 ON dbo.MI_DYN_EmployeeMovementHistory.Level7Code = dbo.MI_EPRF_OrgLevel7.Level7Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel6 ON dbo.MI_DYN_EmployeeMovementHistory.Level6Code = dbo.MI_EPRF_OrgLevel6.Level6Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel5 ON dbo.MI_DYN_EmployeeMovementHistory.Level5Code = dbo.MI_EPRF_OrgLevel5.Level5Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel4 ON dbo.MI_DYN_EmployeeMovementHistory.Level4Code = dbo.MI_EPRF_OrgLevel4.Level4Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel3 ON dbo.MI_DYN_EmployeeMovementHistory.Level3Code = dbo.MI_EPRF_OrgLevel3.Level3Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel2 ON dbo.MI_DYN_EmployeeMovementHistory.Level2Code = dbo.MI_EPRF_OrgLevel2.Level2Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel1 ON dbo.MI_DYN_EmployeeMovementHistory.Level1Code = dbo.MI_EPRF_OrgLevel1.Level1Code LEFT OUTER JOIN dbo.MI_EPRF_EmploymentType ON dbo.MI_DYN_EmployeeMovementHistory.EmployementType = dbo.MI_EPRF_EmploymentType.ETypeCode LEFT OUTER JOIN dbo.MI_EPRF_Location ON dbo.MI_DYN_EmployeeMovementHistory.LocationCode = dbo.MI_EPRF_Location.LocationCode LEFT OUTER JOIN dbo.MI_EPRF_Grade ON dbo.MI_DYN_EmployeeMovementHistory.GradeCode = dbo.MI_EPRF_Grade.GradeCode LEFT OUTER JOIN dbo.MI_EPRF_Designation ON dbo.MI_DYN_EmployeeMovementHistory.DesignationCode = dbo.MI_EPRF_Designation.DesignationCode LEFT OUTER JOIN dbo.MI_EPRF_JobCategory ON dbo.MI_DYN_EmployeeMovementHistory.JobCategoryCode = dbo.MI_EPRF_JobCategory.JobCategoryCode LEFT OUTER JOIN dbo.MI_DYN_ResignationType ON dbo.MI_DYN_EmployeeResignation.ResignationTypeId = dbo.MI_DYN_ResignationType.ResignationTypeId WHERE (dbo.MI_DYN_EmployeeResignation.Deleted = 0) AND (dbo.MI_DYN_EmployeeMovementHistory.Original = 0) AND (dbo.MI_DYN_EmployeeMovementHistory.ModuleId = 4) AND (dbo.MI_DYN_EmployeeMovementHistory.ObjectId IN (111, 135))", "table_requirement": "Employee Resignation History Report"}
{"category": "Resignation", "sql_query": "SELECT dbo.MI_DYN_DisciplinaryInformation.DisciplinaryInfoId, dbo.MI_Employer_Employee.EmployeeCode, dbo.MI_Employer_Employee.Number AS EmpNumber, dbo.MI_Employer_Employee.FullName AS EmpName,  dbo.MI_EPRF_JobCategory.JobCategoryName, dbo.MI_EPRF_Designation.DesignationName,CASE WHEN dbo.MI_DYN_DisciplinaryInformation.ReportedEmployee = 0 THEN dbo.MI_DYN_DisciplinaryInformation.ReportedPerson ELSE (SELECT        RTPEmp.FullName FROM    dbo.MI_Employer_Employee AS RTPEmp WHERE  RTPEmp.EmployeeCode = dbo.MI_DYN_DisciplinaryInformation.ReportedEmployee) END AS ReportedPerson, dbo.MI_EPRF_OrgLevel1.Name AS Level1Name, dbo.MI_EPRF_OrgLevel2.Name AS Level2Name, dbo.MI_EPRF_OrgLevel3.Name AS Level3Name, dbo.MI_EPRF_OrgLevel4.Name AS Level4Name, dbo.MI_EPRF_OrgLevel5.Name AS Level5Name, dbo.MI_DYN_DisciplinaryInformation.Incident,  dbo.MI_DYN_DisciplinaryInformation.ReportedDate, dbo.MI_DYN_DisciplinaryInformation.ReportedBy, dbo.MI_DYN_DisciplinaryAction.FromDate, dbo.MI_DYN_DisciplinaryAction.ToDate, dbo.MI_DYN_DisciplinaryAction.Remarks,  dbo.MI_DYN_ActionType.ActionTypeNameFROM    dbo.MI_DYN_DisciplinaryInformation INNER JOIN dbo.MI_Employer_Employee ON dbo.MI_DYN_DisciplinaryInformation.EmployeeCode = dbo.MI_Employer_Employee.EmployeeCode INNER JOIN dbo.MI_DYN_DisciplinaryAction ON dbo.MI_DYN_DisciplinaryInformation.DisciplinaryInfoId = dbo.MI_DYN_DisciplinaryAction.DisciplinaryInfoId INNER JOIN dbo.MI_DYN_ActionType ON dbo.MI_DYN_DisciplinaryAction.ActionTypeId = dbo.MI_DYN_ActionType.ActionTypeId LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel5 ON dbo.MI_Employer_Employee.Level5Code = dbo.MI_EPRF_OrgLevel5.Level5Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel4 ON dbo.MI_Employer_Employee.Level4Code = dbo.MI_EPRF_OrgLevel4.Level4Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel3 ON dbo.MI_Employer_Employee.Level3Code = dbo.MI_EPRF_OrgLevel3.Level3Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel2 ON dbo.MI_Employer_Employee.Level2Code = dbo.MI_EPRF_OrgLevel2.Level2Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel1 ON dbo.MI_Employer_Employee.Level1Code = dbo.MI_EPRF_OrgLevel1.Level1Code LEFT OUTER JOIN dbo.MI_EPRF_Designation ON dbo.MI_Employer_Employee.DesignationCode = dbo.MI_EPRF_Designation.DesignationCode LEFT OUTER JOIN dbo.MI_EPRF_JobCategory ON dbo.MI_Employer_Employee.CategoryCode = dbo.MI_EPRF_JobCategory.JobCategoryCode WHERE        (dbo.MI_DYN_DisciplinaryInformation.Deleted = 0) ORDER BY dbo.MI_Employer_Employee.EmployeeCode,dbo.MI_DYN_DisciplinaryAction.FromDate", "table_requirement": "Employee Disciplinary Report (Incident and Action Taken)"}
{"category": "Resignation", "sql_query": "SELECT dbo.MI_DYN_DisciplinaryInformation.DisciplinaryInfoId, dbo.MI_Employer_Employee.EmployeeCode, dbo.MI_Employer_Employee.Number AS EmpNumber, dbo.MI_Employer_Employee.FullName AS EmpName,  dbo.MI_EPRF_JobCategory.JobCategoryName, dbo.MI_EPRF_Designation.DesignationName, dbo.MI_EPRF_OrgLevel1.Name AS Level1Name, dbo.MI_EPRF_OrgLevel2.Name AS Level2Name,  dbo.MI_EPRF_OrgLevel3.Name AS Level3Name, dbo.MI_EPRF_OrgLevel4.Name AS Level4Name, dbo.MI_EPRF_OrgLevel5.Name AS Level5Name, dbo.MI_DYN_DisciplinaryInformation.Incident,  dbo.MI_DYN_DisciplinaryInformation.ReportedDate, dbo.MI_DYN_DisciplinaryInformation.ReportedBy,  CASE WHEN dbo.MI_DYN_DisciplinaryInformation.ReportedEmployee = 0 THEN dbo.MI_DYN_DisciplinaryInformation.ReportedPerson ELSE (SELECT  RTPEmp.FullNameFROM    dbo.MI_Employer_Employee AS RTPEmp WHERE  RTPEmp.EmployeeCode = dbo.MI_DYN_DisciplinaryInformation.ReportedEmployee) END AS ReportedPerson, dbo.MI_DYN_DisciplinaryInvolvement.InvolvedBy,  CASE WHEN dbo.MI_DYN_DisciplinaryInvolvement.InvolvedEmployee = 0 THEN dbo.MI_DYN_DisciplinaryInvolvement.InvolvedPerson ELSE (SELECT        RTPEmp2.FullName FROM            dbo.MI_Employer_Employee AS RTPEmp2 WHERE        RTPEmp2.EmployeeCode = dbo.MI_DYN_DisciplinaryInvolvement.InvolvedEmployee) END AS InvolvmentReportedBy, dbo.MI_DYN_DisciplinaryAction.ActionTypeId, dbo.MI_DYN_DisciplinaryAction.FromDate,  dbo.MI_DYN_DisciplinaryAction.ToDate, dbo.MI_DYN_DisciplinaryAction.Remarks FROM            dbo.MI_DYN_DisciplinaryInformation INNER JOIN dbo.MI_Employer_Employee ON dbo.MI_DYN_DisciplinaryInformation.EmployeeCode = dbo.MI_Employer_Employee.EmployeeCode INNER JOIN dbo.MI_DYN_DisciplinaryAction ON dbo.MI_DYN_DisciplinaryInformation.DisciplinaryInfoId = dbo.MI_DYN_DisciplinaryAction.DisciplinaryInfoId LEFT OUTER JOIN dbo.MI_DYN_DisciplinaryInvolvement ON dbo.MI_DYN_DisciplinaryInformation.DisciplinaryInfoId = dbo.MI_DYN_DisciplinaryInvolvement.DisciplinaryInfoId LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel5 ON dbo.MI_Employer_Employee.Level5Code = dbo.MI_EPRF_OrgLevel5.Level5Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel4 ON dbo.MI_Employer_Employee.Level4Code = dbo.MI_EPRF_OrgLevel4.Level4Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel3 ON dbo.MI_Employer_Employee.Level3Code = dbo.MI_EPRF_OrgLevel3.Level3Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel2 ON dbo.MI_Employer_Employee.Level2Code = dbo.MI_EPRF_OrgLevel2.Level2Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel1 ON dbo.MI_Employer_Employee.Level1Code = dbo.MI_EPRF_OrgLevel1.Level1Code LEFT OUTER JOIN dbo.MI_EPRF_Designation ON dbo.MI_Employer_Employee.DesignationCode = dbo.MI_EPRF_Designation.DesignationCode LEFT OUTER JOIN dbo.MI_EPRF_JobCategory ON dbo.MI_Employer_Employee.CategoryCode = dbo.MI_EPRF_JobCategory.JobCategoryCode WHERE        (dbo.MI_DYN_DisciplinaryInformation.Deleted = 0) ORDER BY dbo.MI_Employer_Employee.EmployeeCode	", "table_requirement": "Employee Disciplinary Report (Incident and Involvment)"}
{"category": "Resignation", "sql_query": "SELECT dbo.MI_Admin_RequestQ.RequestId, dbo.MI_Admin_RequestQ.EmployeeCode, dbo.MI_Admin_RequestQ.RequestedDate, CASE WHEN dbo.MI_Admin_RequestQDetails.RequestStatus = 'C' THEN 'Approved' WHEN dbo.MI_Admin_RequestQDetails.RequestStatus = 'R' THEN 'Rejected' WHEN dbo.MI_Admin_RequestQDetails.RequestStatus = 'P' THEN 'Pending' WHEN dbo.MI_Admin_RequestQDetails.RequestStatus = 'D' THEN 'Self Canceled' END AS ReqStatus, dbo.MI_Admin_RequestQDetails.AuthCode, dbo.MI_Admin_RequestQDetails.Comments AS Comment,  dbo.MI_Admin_RequestQDetails.LevelId, dbo.MI_Employer_Employee.Number AS EmpNumber, dbo.MI_Employer_Employee.FullName AS EmpName, MI_Employer_Employee_1.Number AS AppEmpNumber,  MI_Employer_Employee_1.FullName AS AppEmpName, dbo.MI_WF_Process.ProcessName AS WorkflowName, dbo.MI_Admin_RequestQDetails.ActionedDate FROM            dbo.MI_Admin_RequestQ INNER JOIN dbo.MI_Admin_RequestQDetails ON dbo.MI_Admin_RequestQ.RequestId = dbo.MI_Admin_RequestQDetails.RequestId INNER JOIN dbo.MI_Employer_Employee ON dbo.MI_Admin_RequestQ.EmployeeCode = dbo.MI_Employer_Employee.EmployeeCode INNER JOIN dbo.MI_Employer_Employee AS MI_Employer_Employee_1 ON dbo.MI_Admin_RequestQDetails.AuthCode = MI_Employer_Employee_1.EmployeeCode LEFT OUTER JOIN dbo.MI_WF_Workflow ON dbo.MI_Admin_RequestQ.WorkflowId = dbo.MI_WF_Workflow.WorkflowId LEFT OUTER JOIN dbo.MI_WF_Process ON dbo.MI_WF_Workflow.ProcessId = dbo.MI_WF_Process.ProcessId WHERE  (dbo.MI_Admin_RequestQ.ModuleId = 4) ", "table_requirement": "Dynamics Request Status Report "}
{"category": "Resignation", "sql_query": "SELECT dbo.MI_DYN_EmployeeReactivate.EmployeeNumber, dbo.MI_Employer_Employee.FullName, dbo.MI_DYN_EmployeeReactivate.RejoinDate, dbo.MI_EPRF_JobCategory.JobCategoryName,  MI_EPRF_Designation_1.DesignationName, dbo.MI_EPRF_Grade.GradeName, dbo.MI_EPRF_EmploymentType.ETypeName, dbo.MI_EPRF_OrgLevel1.Name AS Level1Name, dbo.MI_EPRF_OrgLevel2.Name AS Level2Name,  dbo.MI_EPRF_OrgLevel3.Name AS Level3Name, dbo.MI_EPRF_OrgLevel4.Name AS Level4Name, dbo.MI_EPRF_OrgLevel5.Name AS Level5Name, dbo.MI_EPRF_OrgLevel6.Name AS Level6Name,  dbo.MI_EPRF_OrgLevel7.Name AS Level7Name, dbo.MI_EPRF_OrgLevel8.Name AS Level8Name, dbo.MI_EPRF_OrgLevel9.Name AS Level9Name, dbo.MI_EPRF_OrgLevel10.Name AS Level10Name,  MI_Employer_Employee_1.Number AS ReportingPersonNo, MI_Employer_Employee_1.FullName AS ReportingPersonName, dbo.MI_EPRF_Designation.DesignationName AS ReportingPersonDesig FROM   dbo.MI_DYN_EmployeeReactivate INNER JOIN dbo.MI_DYN_EmployeeReactivateHistory ON dbo.MI_DYN_EmployeeReactivate.ReactivateId = dbo.MI_DYN_EmployeeReactivateHistory.ReactivateId INNER JOIN dbo.MI_Employer_Employee ON dbo.MI_DYN_EmployeeReactivate.EmployeeCode = dbo.MI_Employer_Employee.EmployeeCode LEFT OUTER JOIN dbo.MI_EPRF_Designation ON dbo.MI_DYN_EmployeeReactivateHistory.ReportingDesignationCode = dbo.MI_EPRF_Designation.DesignationCode LEFT OUTER JOIN dbo.MI_Employer_Employee AS MI_Employer_Employee_1 ON dbo.MI_DYN_EmployeeReactivateHistory.ReportingPersonCode = MI_Employer_Employee_1.EmployeeCode LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel10 ON dbo.MI_DYN_EmployeeReactivateHistory.Level10Code = dbo.MI_EPRF_OrgLevel10.Level10Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel9 ON dbo.MI_DYN_EmployeeReactivateHistory.Level9Code = dbo.MI_EPRF_OrgLevel9.Level9Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel8 ON dbo.MI_DYN_EmployeeReactivateHistory.Level8Code = dbo.MI_EPRF_OrgLevel8.Level8Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel7 ON dbo.MI_DYN_EmployeeReactivateHistory.Level7Code = dbo.MI_EPRF_OrgLevel7.Level7Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel6 ON dbo.MI_DYN_EmployeeReactivateHistory.Level6Code = dbo.MI_EPRF_OrgLevel6.Level6Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel5 ON dbo.MI_DYN_EmployeeReactivateHistory.Level5Code = dbo.MI_EPRF_OrgLevel5.Level5Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel4 ON dbo.MI_DYN_EmployeeReactivateHistory.Level4Code = dbo.MI_EPRF_OrgLevel4.Level4Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel3 ON dbo.MI_DYN_EmployeeReactivateHistory.Level3Code = dbo.MI_EPRF_OrgLevel3.Level3Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel2 ON dbo.MI_DYN_EmployeeReactivateHistory.Level2Code = dbo.MI_EPRF_OrgLevel2.Level2Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel1 ON dbo.MI_DYN_EmployeeReactivateHistory.Level1Code = dbo.MI_EPRF_OrgLevel1.Level1Code LEFT OUTER JOIN dbo.MI_EPRF_EmploymentType ON dbo.MI_DYN_EmployeeReactivateHistory.EmploymentTypeCode = dbo.MI_EPRF_EmploymentType.ETypeCode LEFT OUTER JOIN dbo.MI_EPRF_Grade ON dbo.MI_DYN_EmployeeReactivateHistory.GradeCode = dbo.MI_EPRF_Grade.GradeCode LEFT OUTER JOIN dbo.MI_EPRF_JobCategory ON dbo.MI_DYN_EmployeeReactivateHistory.JobCategoryCode = dbo.MI_EPRF_JobCategory.JobCategoryCode LEFT OUTER JOIN dbo.MI_EPRF_Designation AS MI_EPRF_Designation_1 ON dbo.MI_DYN_EmployeeReactivateHistory.DesignationCode = MI_EPRF_Designation_1.DesignationCode WHERE        (dbo.MI_DYN_EmployeeReactivate.Deleted = 0)", "table_requirement": "Employee Reactivate Report"}
{"category": "Resignation", "sql_query": "SELECT dbo.MI_DYN_EmployeeRejoinProcess.Number, dbo.MI_Employer_Employee.FullName AS EmpName, dbo.MI_DYN_EmployeeRejoinProcess.EpfNo,  dbo.MI_DYN_EmployeeRejoinProcess.AttendanceId, dbo.MI_EPRF_JobCategory.JobCategoryName, MI_EPRF_Designation_1.DesignationName, dbo.MI_EPRF_Grade.GradeName, MI_Employer_Employee_1.Number AS ReportingPersonNo,  MI_Employer_Employee_1.FullName AS ReportingPersonName, dbo.MI_EPRF_Designation.DesignationName AS ReportingPersonDesig, dbo.MI_DYN_EmployeeRejoinProcess.RequestDate, dbo.MI_DYN_EmployeeRejoinProcess.DateOfAppointment,  dbo.MI_EPRF_EmploymentType.ETypeName, dbo.MI_EPRF_OrgLevel1.Name AS Level1Name, dbo.MI_EPRF_OrgLevel2.Name AS Level2Name, dbo.MI_EPRF_OrgLevel3.Name AS Level3Name, dbo.MI_EPRF_OrgLevel4.Name AS Level4Name,  dbo.MI_EPRF_OrgLevel5.Name AS Level5Name, dbo.MI_EPRF_OrgLevel6.Name AS Level6Name, dbo.MI_EPRF_OrgLevel7.Name AS Level7Name, dbo.MI_EPRF_OrgLevel8.Name AS Level8Name,  dbo.MI_EPRF_OrgLevel9.Name AS Level9Name,  dbo.MI_EPRF_OrgLevel10.Name AS Level10Name FROM dbo.MI_DYN_EmployeeRejoinProcess INNER JOIN dbo.MI_Employer_Employee ON dbo.MI_DYN_EmployeeRejoinProcess.NewEmployeeCode = dbo.MI_Employer_Employee.EmployeeCode INNER JOIN dbo.MI_Employer_Employee AS MI_Employer_Employee_1 ON dbo.MI_DYN_EmployeeRejoinProcess.ReportingPersonCode = MI_Employer_Employee_1.EmployeeCode LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel10 ON dbo.MI_DYN_EmployeeRejoinProcess.Level10Code = dbo.MI_EPRF_OrgLevel10.Level10Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel9 ON dbo.MI_DYN_EmployeeRejoinProcess.Level9Code = dbo.MI_EPRF_OrgLevel9.Level9Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel8 ON dbo.MI_DYN_EmployeeRejoinProcess.Level8Code = dbo.MI_EPRF_OrgLevel8.Level8Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel7 ON dbo.MI_DYN_EmployeeRejoinProcess.Level7Code = dbo.MI_EPRF_OrgLevel7.Level7Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel6 ON dbo.MI_DYN_EmployeeRejoinProcess.Level6Code = dbo.MI_EPRF_OrgLevel6.Level6Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel5 ON dbo.MI_DYN_EmployeeRejoinProcess.Level5Code = dbo.MI_EPRF_OrgLevel5.Level5Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel4 ON dbo.MI_DYN_EmployeeRejoinProcess.Level4Code = dbo.MI_EPRF_OrgLevel4.Level4Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel3 ON dbo.MI_DYN_EmployeeRejoinProcess.Level3Code = dbo.MI_EPRF_OrgLevel3.Level3Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel2 ON dbo.MI_DYN_EmployeeRejoinProcess.Level2Code = dbo.MI_EPRF_OrgLevel2.Level2Code LEFT OUTER JOIN dbo.MI_EPRF_OrgLevel1 ON dbo.MI_DYN_EmployeeRejoinProcess.Level1Code = dbo.MI_EPRF_OrgLevel1.Level1Code LEFT OUTER JOIN dbo.MI_EPRF_EmploymentType ON dbo.MI_DYN_EmployeeRejoinProcess.EmploymentTypeCode = dbo.MI_EPRF_EmploymentType.ETypeCode LEFT OUTER JOIN dbo.MI_EPRF_Designation ON dbo.MI_DYN_EmployeeRejoinProcess.ReportingDesignationCode = dbo.MI_EPRF_Designation.DesignationCode LEFT OUTER JOIN dbo.MI_EPRF_Grade ON dbo.MI_DYN_EmployeeRejoinProcess.GradeCode = dbo.MI_EPRF_Grade.GradeCode LEFT OUTER JOIN dbo.MI_EPRF_JobCategory ON dbo.MI_DYN_EmployeeRejoinProcess.JobCategoryCode = dbo.MI_EPRF_JobCategory.JobCategoryCode LEFT OUTER JOIN dbo.MI_EPRF_Designation AS MI_EPRF_Designation_1 ON dbo.MI_DYN_EmployeeRejoinProcess.DesignationCode = MI_EPRF_Designation_1.DesignationCode WHERE (dbo.MI_DYN_EmployeeRejoinProcess.Deleted = 0)", "table_requirement": "Employee Rejoin Report"}